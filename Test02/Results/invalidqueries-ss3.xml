<?xml-stylesheet type="text/xsl" href="analysis.xsl"?>
<test_results>
<info>
<name>Test02</name><parsing_time_taken>4.000000</parsing_time_taken>
</info>
<queries>
<query>
<id ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: capitalised synonym declaration">1</id><querystr><![CDATA[Stmt s1; Select s1 such that Next(14, 21)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>22.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Next="1" UnnamedVar="2" SuchThat="1" CondNum="5" RelNum="1" comment="INVALID: underscore as synonym">2</id><querystr><![CDATA[stmt s1, _; Select _ such that Next(14, 21)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>23.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: lower cap select">3</id><querystr><![CDATA[stmt s; select s such that Next(14, 21)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>24.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: declaration spelled wrongly">4</id><querystr><![CDATA[smt s; Select s such that Next(14, 21)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>25.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: synonym used is a synonym type">5</id><querystr><![CDATA[stmt s, constant; Select constant such that Next(14, 21)]]></querystr>
<stuans>2,11,3,12,13,17,5,18,24,29,19,15,23,20,21,10,6,22,16,30,31,32,28,33,34,43,36,1,14,40,41,39,46,26,42,38,47,8,51,49,48,9,44,25,7,50,45,35,4,37,27</stuans>
<correct>1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51</correct>
<time_taken>33.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Affects="1" Next="1" SuchThat="1" CondNum="4" RelNum="2" comment="INVALID: synonym used is a clause">6</id><querystr><![CDATA[stmt s, Affects; Select Affects such that Next(14, 21)]]></querystr>
<stuans>2,11,3,12,13,17,5,18,24,29,19,15,23,20,21,10,6,22,16,30,31,32,28,33,34,43,36,1,14,40,41,39,46,26,42,38,47,8,51,49,48,9,44,25,7,50,45,35,4,37,27</stuans>
<correct>1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51</correct>
<time_taken>35.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: synonym used is a asterik">7</id><querystr><![CDATA[stmt s, *; Select * such that Next(14, 21)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>22.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: synonym used to crash program">8</id><querystr><![CDATA[stmt ^C; Select ^C such that Next(14, 21)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>26.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: semi-colon at end of query">9</id><querystr><![CDATA[stmt s; Select s such that Next(14, 21);]]></querystr>
<stuans>2,11,3,12,13,17,5,18,24,29,19,15,23,20,21,10,6,22,16,30,31,32,28,33,34,43,36,1,14,40,41,39,46,26,42,38,47,8,51,49,48,9,44,25,7,50,45,35,4,37,27</stuans>
<correct>1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51</correct>
<time_taken>31.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Next="1" With="1" CondNum="3" RelNum="1" comment="INVALID: use with instead of such that">10</id><querystr><![CDATA[stmt s; Select s with Next(14, 21)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>25.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: synonym used is an integer">11</id><querystr><![CDATA[stmt papa, mama, 22; Select 22 such that Next(14, 21)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>23.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: synonym repeated in declaration">12</id><querystr><![CDATA[stmt s; assign s; Select s such that Next(14, 21)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>23.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" SuchThat="1" CondNum="2" RelNum="0" comment="INVALID: clause spelled wrongly">13</id><querystr><![CDATA[stmt s; Select s such that nxt(14, 21)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>22.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" SuchThat="1" CondNum="2" RelNum="0" comment="INVALID: clause capitalised">14</id><querystr><![CDATA[stmt s; Select s such that NEXT(14, 21)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>24.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: spacing issues in declaration">15</id><querystr><![CDATA[stmt          				s1,s2,s3    ,   s4; Select s such that Next(14, 21)]]></querystr>
<stuans></stuans>
<correct>1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51</correct>
<time_taken>30.000000</time_taken>
<failed>
<missing>1,10,11,12,13,14,15,16,17,18,19,2,20,21,22,23,24,25,26,27,28,29,3,30,31,32,33,34,35,36,37,38,39,4,40,41,42,43,44,45,46,47,48,49,5,50,51,6,7,8,9</missing>
<additional></additional>
<summary>
<expected>51</expected>
<matched>0</matched>
<missing>51</missing>
<additional>0</additional>
</summary>
</failed>
</query>
<query>
<id ReturnTuple="1" CondNum="1" RelNum="0" comment="INVALID: spacing issues in query">16</id><querystr><![CDATA[stmt s; Select      			s			such			that						Next(14 , 21)]]></querystr>
<stuans>2,11,3,12,13,17,5,18,24,29,19,15,23,20,21,10,6,22,16,30,31,32,28,33,34,43,36,1,14,40,41,39,46,26,42,38,47,8,51,49,48,9,44,25,7,50,45,35,4,37,27</stuans>
<correct>1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51</correct>
<time_taken>31.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: repeated synonym in clause">17</id><querystr><![CDATA[stmt s; Select s such that Next(s,s)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>21.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: repeated synonym in clause">18</id><querystr><![CDATA[stmt s; Select s such that Follows(s,s)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>21.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: repeated synonym in clause">19</id><querystr><![CDATA[stmt s; Select s such that Follows*(s,s)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>22.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Parent="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: repeated synonym in clause">20</id><querystr><![CDATA[stmt s; Select s such that Parent(s,s)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>20.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Parentstar="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: repeated synonym in clause">21</id><querystr><![CDATA[stmt s; Select s such that Parent*(s,s)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>24.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="INVALID: variable synonym same as souce procedure name">22</id><querystr><![CDATA[variable hihi; Select hihi such that Uses("hihi", hihi);]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>22.000000</time_taken>
<passed/>
</query>
</queries>
</test_results>
