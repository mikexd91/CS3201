1 - USES-boolean: fixed-fixed (regular stmt)

Select BOOLEAN such that Uses(12, "charmeleon")
true
5000
2 - USES-stmt: fixed-fixed (while stmt)
stmt s;
Select s such that Uses(18, "battle3")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
3 - USES-boolean: fixed-fixed (within while stmt)

Select BOOLEAN such that Uses(17, "wartortle")
true
5000
4 - USES-boolean: fixed-fixed (if stmt)

Select BOOLEAN such that Uses(20, "wartortle")
true
5000
5 - USES-boolean: fixed-fixed (within if stmt)

Select BOOLEAN such that Uses(20, "squirtle")
true
5000
6 - USES-stmt: fixed-fixed (false)
stmt s;
Select s such that Uses(14, "charmeleon")
none
5000
7 - USES-stmt: syn-syn (tuple)
stmt s; variable v;
Select <s,v> such that Uses(s, v)
5 firstStageEvolution, 5 charmander, 5 bulbasaur, 5 squirtle, 6 charmander, 7 bulbasaur, 8 squirtle, 9 charmander, 10 squirtle, 11 bulbasaur, 12 charmeleon, 12 wartortle, 13 ivysaur, 13 charmeleon, 14 squirtle, 14 ivysaur, 15 battle1, 15 wartortle, 15 ivysaur, 15 battle2, 15 battle3, 15 charmeleon, 15 squirtle, 16 wartortle, 16 ivysaur, 17 battle2, 17 battle3, 17 charmeleon, 17 wartortle, 17 squirtle, 18 battle3, 18 charmeleon, 18 wartortle, 19 charmeleon, 19 wartortle, 20 wartortle, 20 squirtle, 21 squirtle, 22 wartortle
5000
8 - USES-assign: syn-syn
assign a; variable v;
Select a such that Uses(a, v)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
9 - USES-while: syn-syn
while w; variable v;
Select w such that Uses(w, v)
5, 15, 17, 18
5000
10 - USES-if: syn-syn
if i; variable v;
Select i such that Uses(i, v)
20
5000
11 - USES-variable: syn-syn
stmt s; variable v;
Select v such that Uses(s, v)
firstStageEvolution, charmander, bulbasaur, squirtle, charmeleon, ivysaur, wartortle, battle1, battle2, battle3
5000
12 - USES-procedure: syn-syn
procedure p; variable v;
Select p such that Uses(p, v)
pokemon
5000
13 - USES-boolean: generic-generic

Select BOOLEAN such that Uses(_, _)
true
5000
14 - USES-variable: fixed-syn (regular stmt)
variable v;
Select v such that Uses(12, v)
charmeleon, wartortle
5000
15 - USES-variable: fixed-syn (while stmt)
variable v;
Select v such that Uses(15, v)
battle1, wartortle, ivysaur, battle2, battle3, charmeleon, squirtle
5000
16 - USES-variable: fixed-syn (if stmt)
variable v;
Select v such that Uses(20, v)
wartortle, squirtle
5000
17 - USES-stmt: syn-fixed
stmt s;
Select s such that Uses(s, "ivysaur")
13, 14, 15, 16
5000
18 - USES-assign: syn-fixed
assign a;
Select a such that Uses(a, "battle2")
none
5000
19 - USES-while: syn-fixed
while w;
Select w such that Uses(w, "ivysaur")
15
5000
20 - USES-if: syn-fixed
if i;
Select i such that Uses(i, "squirtle")
20
5000
21 - USES-variable: syn-fixed
stmt s; variable v;
Select v such that Uses(s, "lastPokemon")
none
5000
22 - USES-procedure: syn-fixed
procedure p;
Select p such that Uses(p, "lastPokemon")
none
5000
23 - USES-boolean: fixed-generic

Select BOOLEAN such that Uses(14, _)
true
5000
24 - USES-boolean: generic-fixed

Select BOOLEAN such that Uses(_, "battle3")
true
5000
25 - USES-assign: syn-generic
assign a;
Select a such that Uses(a, _)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
26 - USES-while: syn-generic
while w;
Select w such that Uses(w, _)
5, 15, 17, 18
5000
27 - USES-if: syn-generic
if i;
Select i such that Uses(i, _)
20
5000
28 - USES-variable: syn-generic
stmt s; variable v;
Select v such that Uses(s, _)
firstStageEvolution, charmander, bulbasaur, squirtle, charmeleon, wartortle, ivysaur, battle1, battle2, battle3, lastPokemon
5000
29 - USES-procedure: syn-generic
procedure p;
Select p such that Uses(p, _)
pokemon
5000
30 - USES-variable: generic-syn
variable v;
Select v such that Uses(_, v)
firstStageEvolution, charmander, bulbasaur, squirtle, charmeleon, wartortle, ivysaur, battle1, battle2, battle3
5000
31 - USES-assign: pattern-right defined (match select)
assign a;
Select a such that Uses(a, _) pattern a(_, _"charmeleon"_)
12, 13, 19
5000
32 - USES-assign: pattern-right defined (does not match select)
assign a1, a2;
Select a1 such that Uses(a1, "squirtle") pattern a2(_, _"4"_)
none
5000
33 - USES-assign: pattern-left defined (match select)
assign a;
Select a such that Uses(a, _) pattern a("ivysaur", _)
11, 19
5000
34 - USES-assign: pattern-left defined (does not match select)
assign a1, a2;
Select a1 such that Uses(a1, "bulbasaur") pattern a2("lastPokemon", _)
7, 11
5000
35 - USES-assign: pattern-left defined synonym
assign a; variable v;
Select a such that Uses(14, v) pattern a(v, _)
2, 8, 11, 19
5000
36 - USES-assign: pattern-both defined (match select)
assign a;
Select a such that Uses(a, _) pattern a("wartortle", _"squirtle"_)
10, 21
5000
37 - USES-assign: pattern-both defined (does not match select)
assign a1, a2;
Select a1 such that Uses(a1, "charmander") pattern a2("battle2", "charmeleon")
none
5000
38 - USES-assign: pattern-both defined, left synonym
assign a; variable v;
Select a such that Uses(a, v) pattern a(v, _"squirtle"_)
8
5000
39 - USES-while: pattern (match select)
while w;
Select w such that Uses(w, _) pattern w("battle3", _)
18
5000
40 - USES-while: pattern (does not match select)
while w1, w2;
Select w1 such that Uses(w1, _) pattern w2("battle4", _)
none
5000
41 - USES-if: pattern (match select)
if i;
Select i such that Uses(i, _) pattern i("wartortle", _, _)
20
5000
42 - USES-if: pattern (does not match select)
assign a; if i;
Select a such that Uses(a, _) pattern i("battle2", _, _)
none
5000
43 - USES: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Uses(12, "charmeleon") and Uses(17, "battle2")
true
5000
44 - USES: 2 clauses (similar) - syn-syn, syn-syn
stmt s; variable v1, v2;
Select <s,v1> such that Uses(s, v1) and Uses(s, v2)
5 firstStageEvolution, 5 charmander, 5 bulbasaur, 5 squirtle, 6 charmander, 7 bulbasaur, 8 squirtle, 9 charmander, 10 squirtle, 11 bulbasaur, 12 charmeleon, 12 wartortle, 13 ivysaur, 13 charmeleon, 14 squirtle, 14 ivysaur, 15 battle1, 15 wartortle, 15 ivysaur, 15 battle2, 15 battle3, 15 charmeleon, 15 squirtle, 16 wartortle, 16 ivysaur, 17 battle2, 17 battle3, 17 charmeleon, 17 wartortle, 17 squirtle, 18 battle3, 18 charmeleon, 18 wartortle, 19 charmeleon, 19 wartortle, 20 wartortle, 20 squirtle, 21 squirtle, 22 wartortle
5000
45 - USES: 2 clauses (similar) - fixed-syn, fixed-syn
variable v;
Select v such that Uses(12, v) and Uses(15, v)
charmeleon, wartortle
5000
46 - USES: 2 clauses (similar) - syn-fixed, syn-fixed
stmt s; assign a;
Select s such that Uses(s, "ivysaur") and Uses(a, "battle2")
none
5000
47 - USES: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Uses(23, _) and Uses(_, "battle3")
false
5000
48 - USES: 2 clauses (similar) - generic-fixed, generic-fixed
stmt s;
Select s such that Uses(_, "battle2") and Uses(_, "battle3")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
49 - USES: 2 clauses (similar) - syn-generic, syn-generic
if i; while w;
Select <i,w> such that Uses(i, _) and Uses(w, _)
20 5, 20 15, 20 17, 20 18
5000
50 - USES: 2 clauses (similar) - generic-syn, generic-syn
variable v1, v2;
Select v1 such that Uses(_, v1) and Uses(_, v2)
charmander, squirtle, bulbasaur, firstStageEvolution, charmeleon, wartortle, ivysaur, battle1, battle2, battle3
5000
51 - USES: 2 clauses (mixed) - fixed-fixed, fixed-syn
variable v;
Select v such that Uses(17, "battle2") and Uses(18, v)
battle3, charmeleon, wartortle
5000
52 - USES: 2 clauses (mixed) - syn-syn, syn-fixed
stmt s; variable v;
Select s such that Uses(s, v) and Uses(s, "lastPokemon")
none
5000
53 - USES: 2 clauses (mixed) - generic-generic, fixed-generic
stmt s;
Select s such that Uses(_, _) and Uses(23 , _)
none
5000
54 - USES: 2 clauses (mixed) - fixed-syn, generic-fixed
variable v;
Select v such that Uses(15, v) and Uses(_, "lastPokemon")
none
5000
55 - USES: 2 clauses (mixed) - syn-fixed, syn-generic
stmt s;
Select s such that Uses(s, "squirtle") and Uses(s, _)
5, 8, 10, 14, 15, 17, 20, 21
5000
56 - USES: 2 clauses (mixed) - fixed-generic, generic-syn
variable v;
Select v such that Uses(23, _) and Uses(_, v)
none
5000
57 - USES: 2 clauses (mixed) - generic-fixed, syn-generic
stmt s;
Select s such that Uses(_, "wartortle") and Uses(s, _)
5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
5000
58 - USES: 2 clauses (mixed) - syn-generic, generic-syn
stmt s; variable v;
Select v such that Uses(s, _) and Uses(_, v)
firstStageEvolution, charmander, bulbasaur, squirtle, charmeleon, wartortle, ivysaur, battle1, battle2, battle3
5000
59 - USES: 2 clauses (mixed) - generic-fixed, generic-syn
variable v;
Select BOOLEAN such that Uses(_, "secondStageEvolution") and Uses(_, v)
false
5000
60 - USES: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Uses(a, "ivysaur")
13, 14, 16
5000
61 - USES: stmt# - select clause (no results)
assign a;
Select a.stmt# such that Uses(a, "lastPokemon")
none
5000
62 - USES: stmt# - with clause (has results)
assign a;
Select a such that Uses(a, "charmeleon") with a.stmt# = 12
12
5000
63 - USES: stmt# - with clause (no results)
assign a;
Select a such that Uses(a, "charmeleon") with a.stmt# = 12 and s.stmt# = 11
none
5000
64 - USES: procName - select clause (has results)
procedure p;
Select p.procName such that Uses(p, "battle1")
pokemon
5000
65 - USES: procName - select clause (no results)
procedure p;
Select p.procName such that Uses(p, "a")
none
5000
66 - USES: procName - with clause (has results)
procedure p;
Select BOOLEAN such that Uses(p, "battle1") with p.procName = "pokemon"
true
5000
67 - USES: procName - with clause (no results)
procedure p;
Select BOOLEAN such that Uses(p, "battle1") with p.procName = "digimon"
false
5000
68 - USES: varName - select clause (has results)
variable v;
Select v.varName such that Uses(21, v)
squirtle
5000
69 - USES: varName - select clause (no results)
variable v;
Select v.varName such that Uses(23, v)
none
5000
70 - USES: varName - with clause (has results)
variable v;
Select BOOLEAN such that Uses(19, v) with v.varName = "wartortle"
true
5000
71 - USES: varName - with clause (no results)
variable v;
Select BOOLEAN such that Uses(19, v) with v.varName = "charmander"
false
5000
72 - USES: const - with clause (has results)
variable v; constant c;
Select c such that Uses(17, v) with c.value = 3
3
5000
73 - USES: const - with clause (no results)
variable v; constant c;
Select BOOLEAN such that Uses(17, v) with c.value = 6
false
5000
74 - USES: prog_line
prog_line n;
Select n such that Uses(n, "wartortle")
12, 15, 16, 17, 18, 19, 20, 22
5000
75 - USES: stmt overflow
variable v;
Select v such that Uses(45, v)
none
5000
76 - USES: stmt underflow
variable v;
Select v such that Uses(-1, v)
none
5000
77 - USES: stmt underflow
variable v;
Select v such that Uses(0, v)
none
5000
78 - USES: non-existent variable
assign a;
Select a such that Uses(a, "helloworld")
none
5000
79 - MODIFIES-boolean: fixed-fixed (regular stmt)

Select BOOLEAN such that Modifies(12, "battle1")
true
5000
80 - MODIFIES-boolean: fixed-fixed (within while stmt)

Select BOOLEAN such that Modifies(17, "wartortle")
true
5000
81 - MODIFIES-boolean: fixed-fixed (if stmt)

Select BOOLEAN such that Modifies(20, "wartortle")
true
5000
82 - MODIFIES-stmt: fixed-fixed (false)
stmt s;
Select s such that Modifies(20, "charmeleon")
none
5000
83 - MODIFIES-stmt: syn-syn (tuple)
stmt s; variable v;
Select <s,v> such that Modifies(s, v)
1 charmander, 2 squirtle, 3 bulbasaur, 4 firstStageEvolution, 5 charmander, 5 bulbasaur, 5 squirtle, 6 charmander, 7 bulbasaur, 8 squirtle, 9 charmeleon, 10 wartortle, 11 ivysaur, 12 battle1, 13 battle2, 14 battle3, 15 charmeleon, 15 ivysaur, 15 wartortle, 15 lastPokemon, 16 charmeleon, 17 ivysaur, 17 wartortle, 18 ivysaur, 19 ivysaur, 20 wartortle, 21 wartortle, 22 wartortle, 23 lastPokemon
5000
84 - MODIFIES-assign: syn-syn
assign a; variable v;
Select a such that Modifies(a, v)
1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
85 - MODIFIES-while: syn-syn
while w; variable v;
Select w such that Modifies(w, v)
5, 15, 17, 18
5000
86 - MODIFIES-if: syn-syn
if i; variable v;
Select i such that Modifies(i, v)
20
5000
87 - MODIFIES-variable: syn-syn
stmt s; variable v;
Select v such that Modifies(s, v)
charmander, squirtle, bulbasaur, firstStageEvolution, charmeleon, wartortle, ivysaur, battle1, battle2, battle3, lastPokemon
5000
88 - MODIFIES-procedure: syn-syn
procedure p; variable v;
Select p such that Modifies(p, v)
pokemon
5000
89 - MODIFIES-boolean: generic-generic

Select BOOLEAN such that Modifies(_, _)
true
5000
90 - MODIFIES-variable: fixed-syn (regular stmt)
variable v;
Select v such that Modifies(13, v)
battle2
5000
91 - MODIFIES-variable: fixed-syn (while stmt)
variable v;
Select v such that Modifies(15, v)
charmeleon, ivysaur, wartortle, lastPokemon
5000
92 - MODIFIES-variable: fixed-syn (if stmt)
variable v;
Select v such that Modifies(20, v)
wartortle
5000
93 - MODIFIES-stmt: syn-fixed
stmt s;
Select s such that Modifies(s, "ivysaur")
11, 15, 17, 18, 19
5000
94 - MODIFIES-assign: syn-fixed
assign a;
Select a such that Modifies(a, "battle2")
13
5000
95 - MODIFIES-while: syn-fixed
while w;
Select w such that Modifies(w, "ivysaur")
15, 17, 18
5000
96 - MODIFIES-if: syn-fixed
if i;
Select i such that Modifies(i, "squirtle")
none
5000
97 - MODIFIES-variable: syn-fixed
stmt s; variable v;
Select v such that Modifies(s, "lastPokemon")
charmander, squirtle, bulbasaur, firstStageEvolution, charmeleon, wartortle, ivysaur, battle1, battle2, battle3, lastPokemon
5000
98 - MODIFIES-procedure: syn-fixed
procedure p;
Select p such that Modifies(p, "lastPokemon")
pokemon
5000
99 - MODIFIES-boolean: fixed-generic

Select BOOLEAN such that Modifies(14, _)
true
5000
100 - MODIFIES-: generic-fixed

Select BOOLEAN such that Modifies(_, "battle3")
true
5000
101 - MODIFIES-assign: syn-generic
assign a;
Select a such that Modifies(a, _)
1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
102 - MODIFIES-while: syn-generic
while w;
Select w such that Modifies(w, _)
5, 15, 17, 18
5000
103 - MODIFIES-if: syn-generic
if i;
Select i such that Modifies(i, _)
20
5000
104 - MODIFIES-variable: syn-generic
stmt s; variable v;
Select v such that Modifies(s, _)
firstStageEvolution, charmander, bulbasaur, squirtle, charmeleon, wartortle, ivysaur, battle1, battle2, battle3, lastPokemon
5000
105 - MODIFIES-procedure: syn-generic
procedure p;
Select p such that Modifies(p, _)
pokemon
5000
106 - MODIFIES-variable: generic-syn
variable v;
Select v such that Modifies(_, v)
firstStageEvolution, charmander, bulbasaur, squirtle, charmeleon, wartortle, ivysaur, battle1, battle2, battle3, lastPokemon
5000
107 - MODIFIES-assign: pattern-right defined (match select)
assign a;
Select a such that Modifies(a, _) pattern a(_, _"charmeleon"_)
12, 13, 19
5000
108 - MODIFIES-assign: pattern-right defined (does not match select)
assign a1, a2;
Select a1 such that Modifies(a1, "squirtle") pattern a2(_, _"4"_)
none
5000
109 - MODIFIES-assign: pattern-left defined (match select)
assign a;
Select a such that Modifies(a, _) pattern a("ivysaur", _)
11, 19
5000
110 - MODIFIES-assign: pattern-left defined (does not match select)
assign a1, a2;
Select a1 such that Modifies(a1, "bulbasaur") pattern a2("lastPokemon", _)
3, 7
5000
111 - MODIFIES-assign: pattern-left defined synonym
assign a; variable v;
Select a such that Modifies(6, v) pattern a(v, _)
1, 6
5000
112 - MODIFIES-assign: pattern-both defined (match select)
assign a;
Select a such that Modifies(a, _) pattern a("wartortle", _"squirtle"_)
10, 21
5000
113 - MODIFIES-assign: pattern-both defined (does not match select)
assign a1, a2;
Select a1 such that Modifies(a1, "charmander") pattern a2("battle2", _"charmeleon"_)
1, 6
5000
114 - MODIFIES-assign: pattern-both defined, left synonym
assign a; variable v;
Select a such that Modifies(a, v) pattern a(v, _"wartortle"_)
12, 16, 19, 22
5000
115 - MODIFIES-while: pattern (match select)
while w;
Select w such that Modifies(w, _) pattern w("battle3", _)
18
5000
116 - Modifies-while: pattern (does not match select)
stmt s; while w;
Select s such that Modifies(s, v) pattern w("battle4", _)
none
5000
117 - MODIFIES-if: pattern (match select)
if i;
Select i such that Modifies(i, _) pattern i("wartortle", _, _)
20
5000
118 - MODIFIES-if: pattern (does not match select)
assign a; if i;
Select a such that Modifies(a, _) pattern i("battle2", _, _)
none
5000
119 - MODIFIES: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Modifies(12, "battle1") and Modifies(17, "ivysaur")
true
5000
120 - MODIFIES: 2 clauses (similar) - syn-syn, syn-syn
stmt s1, s2; variable v;
Select <s1,s2> such that Modifies(s1, v) and Modifies(s2, v)
1 1, 5 5, 6 6, 1 5, 5 1, 1 6, 6 1, 5 6, 6 5, 2 2, 8 8, 2 5, 5 2, 2 8, 8 2, 5 8, 8 5, 3 3, 7 7, 3 5, 5 3, 3 7, 7 3, 5 7, 7 5, 4 4, 9 9, 15 15, 16 16, 9 15, 15 9, 9 16, 16 9, 15 16, 16 15, 10 10, 17 17, 20 20, 21 21, 22 22, 10 15, 15 10, 10 17, 17 10, 10 20, 20 10, 10 21, 21 10, 10 22, 22 10, 15 17, 17 15, 15 20, 20 15, 15 21, 21 15, 15 22, 22 15, 17 20, 20 17, 17 21, 21 17, 17 22, 22 17, 20 21, 21 20, 20 22, 22 20, 21 22, 22 21, 11 11, 18 18, 19 19, 11 15, 15 11, 11 17, 17 11, 11 18, 18 11, 11 19, 19 11, 15 18, 18 15, 15 19, 19 15, 17 18, 18 17, 17 19, 19 17, 18 19, 19 18, 12 12, 13 13, 14 14, 15 23, 23 15, 23 23
5000
121 - MODIFIES: 2 clauses (similar) - fixed-syn, fixed-syn
variable v;
Select v such that Modifies(11, v) and Modifies(15, v)
ivysaur
5000
122 - MODIFIES: 2 clauses (similar) - syn-fixed, syn-fixed
stmt s; assign a;
Select s such that Modifies(s, "ivysaur") and Modifies(a, "battle2")
11, 15, 17, 18, 19
5000
123 - MODIFIES: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Modifies(23, _) and Modifies(20, _)
true
5000
124 - MODIFIES: 2 clauses (similar) - generic-fixed, generic-fixed
stmt s;
Select s such that Modifies(_, "battle2") and Modifies(_, "battle3")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
125 - MODIFIES: 2 clauses (similar) - syn-generic, syn-generic
if i; while w;
Select <i,w> such that Modifies(i, _) and Modifies(w, _)
20 5, 20 15, 20 17, 20 18
5000
126 - MODIFIES: 2 clauses (similar) - generic-syn, generic-syn
variable v1, v2;
Select v1 such that Modifies(_, v1) and Modifies(_, v2)
charmander, squirtle, bulbasaur, firstStageEvolution, charmeleon, wartortle, ivysaur, battle1, battle2, battle3, lastPokemon
5000
127 - MODIFIES: 2 clauses (mixed) - fixed-fixed, fixed-syn
variable v;
Select v such that Modifies(17, "ivysaur") and Modifies("18", v)
ivysaur
5000
128 - MODIFIES: 2 clauses (mixed) - syn-syn, syn-fixed
stmt s; variable v;
Select s such that Modifies(s, v) and Modifies(s, "lastPokemon")
15, 23
5000
129 - MODIFIES: 2 clauses (mixed) - generic-generic, fixed-generic

Select BOOLEAN such that Modifies(_, _) and Modifies(23 , _)
true
5000
130 - MODIFIES: 2 clauses (mixed) - fixed-syn, generic-fixed
variable v;
Select v such that Modifies(15, v) and Modifies(_, "lastPokemon")
charmeleon, ivysaur, wartortle, lastPokemon
5000
131 - MODIFIES: 2 clauses (mixed) - syn-fixed, syn-generic
stmt s;
Select s such that Modifies(s, "squirtle") and Modifies(s, _)
2, 5, 8
5000
132 - MODIFIES: 2 clauses (mixed) - fixed-generic, generic-syn
variable v;
Select v such that Modifies(23, _) and Modifies(_, v)
charmander, squirtle, bulbasaur, firstStageEvolution, charmeleon, wartortle, ivysaur, battle1, battle2, battle3, lastPokemon
5000
133 - MODIFIES: 2 clauses (mixed) - generic-fixed, syn-generic
stmt s;
Select s such that Modifies(_, "wartortle") and Modifies(s, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
134 - MODIFIES: 2 clauses (mixed) - syn-generic, generic-syn
stmt s; variable v;
Select v such that Modifies(s, _) and Modifies(_, v)
charmander, squirtle, bulbasaur, firstStageEvolution, charmeleon, wartortle, ivysaur, battle1, battle2, battle3, lastPokemon
5000
135 - MODIFIES: 2 clauses (mixed) - generic-fixed, generic-syn
variable v;
Select BOOLEAN such that Modifies(_, "secondStageEvolution") and Modifies(_, v)
false
5000
136 - MODIFIES: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Modifies(a, "ivysaur")
11, 19
5000
137 - MODIFIES: stmt# - select clause (no results)
assign a;
Select a.stmt# such that Modifies(a, "firstPokemon")
none
5000
138 - MODIFIES: stmt# - with clause (has results)
assign a;
Select a such that Modifies(a, "battle1") with a.stmt# = 12
12
5000
139 - MODIFIES: stmt# - with clause (no results)
assign a;
Select a such that Modifies(a, "battle1") with a.stmt# = 12 and s.stmt# = 11
none
5000
140 - MODIFIES: procName - select clause (has results)
procedure p;
Select p.procName such that Modifies(p, "battle1")
pokemon
5000
141 - MODIFIES: procName - select clause (no results)
procedure p;
Select p.procName such that Modifies(p, "a")
none
5000
142 - MODIFIES: procName - with clause (has results)
procedure p;
Select BOOLEAN such that Modifies(p, "battle1") with p.procName = "pokemon"
true
5000
143 - MODIFIES: procName - with clause (no results)
procedure p;
Select BOOLEAN such that Modifies(p, "battle1") with p.procName = "digimon"
false
5000
144 - MODIFIES: varName - select clause (has results)
variable v;
Select v.varName such that Modifies(21, v)
wartortle
5000
145 - Modifies: varName - with clause (has results)
variable v;
Select BOOLEAN such that Modifies(19, v) with v.varName = "ivysaur"
true
5000
146 - MODIFIES: varName - with clause (no results)
variable v;
Select BOOLEAN such that Modifies(19, v) with v.varName = "charmander"
false
5000
147 - MODIFIES: const - with clause (has results)
variable v; constant c;
Select c such that Modifies(17, v) with c.value = 3
3
5000
148 - MODIFIES: const - with clause (no results)
variable v; constant c;
Select BOOLEAN such that Modifies(17, v) with c.value = 6
false
5000
149 - MODIFIES: prog_line
prog_line n;
Select n such that Modifies(n, "wartortle")
10, 15, 17, 20, 21, 22
5000
150 - PARENT-boolean: fixed-fixed (regular stmt)

Select BOOLEAN such that Parent(5, 6)
true
5000
151 - PARENT-stmt: fixed-fixed (while stmt)
stmt s;
Select s such that Parent(15, 17)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
152 - PARENT-boolean: fixed-fixed (if stmt, if block)

Select BOOLEAN such that Parent(20, 21)
true
5000
153 - PARENT-boolean: fixed-fixed (fi stmt, else block)

Select BOOLEAN such that Parent(20, 22)
true
5000
154 - PARENT-stmt: fixed-fixed (false)
stmt s;
Select s such that Parent(14, 15)
none
5000
155 - PARENT-stmt: syn-syn (tuple)
stmt s1, s2;
Select <s1,s2> such that Parent(s1, s2)
5 6, 5 7, 5 8, 15 16, 15 17, 15 23, 17 18, 17 20, 18 19, 20 21, 20 22
5000
156 - PARENT-assign: syn-syn
stmt s; assign a;
Select a such that Parent(s, a)
6, 7, 8, 16, 19, 21, 22, 23
5000
157 - PARENT-while: syn-syn
while w1, w2;
Select w1 such that Parent(w1, w2)
15, 17
5000
158 - PARENT-if: syn-syn
stmt s; if i;
Select i such that Parent(i, s)
20
5000
159 - PARENT-boolean: generic-generic

Select BOOLEAN such that Parent(_, _)
true
5000
160 - PARENT-assign: fixed-syn (while stmt)
assign a;
Select a such that Parent(17, a)
none
5000
161 - PARENT-stmt: fixed-syn (if stmt)
stmt s;
Select s such that Parent(20, s)
21, 22
5000
162 - PARENT-stmt: syn-fixed
stmt s;
Select s such that Parent(s, 19)
18
5000
163 - PARENT-while: syn-fixed
while w;
Select w such that Parent(w, 21)
none
5000
164 - PARENT-if: syn-fixed
if i;
Select i such that Parent(i, 22)
20
5000
165 - PARENT-boolean: fixed-generic

Select BOOLEAN such that Parent(14, _)
false
5000
166 - PARENT-boolean: generic-fixed

Select BOOLEAN such that Parent(_, 23)
true
5000
167 - PARENT-assign: syn-generic
assign a;
Select a such that Parent(a, _)
none
5000
168 - PARENT-while: syn-generic
while w;
Select w such that Parent(w, _)
5, 15, 17, 18
5000
169 - PARENT-if: syn-generic
if i;
Select i such that Parent(i, _)
20
5000
170 - PARENT-stmt: generic-syn
stmt s;
Select s such that Parent(_, s)
6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 23
5000
171 - PARENT-assign: generic-syn
assign a;
Select a such that Parent(_, a)
6, 7, 8, 16, 19, 21, 22, 23
5000
172 - PARENT-while: generic-syn
while w;
Select w such that Parent(_, w)
17, 18
5000
173 - PARENT-if: generic-syn
if i;
Select i such that Parent(_, i)
20
5000
174 - PARENT-while: pattern-left defined
while w;
Select w such that Parent(15, w) pattern w("battle2", _)
17
5000
175 - PARENT-while: pattern-left defined synonym
while w; variable v;
Select w such that Parent(15, w) pattern w(v, _)
17
5000
176 - PARENT-if: pattern-left defined
if i;
Select i such that Parent(i, 22) pattern i("squirtle", _, _)
none
5000
177 - PARENT-if: pattern-left defined synonym
if i; variable v;
Select i such that Parent(i, 21) pattern i(v, _, _)
20
5000
178 - PARENT: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Parent(15, 17) and Parent(17, 18)
true
5000
179 - PARENT: 2 clauses (similar) - syn-syn, syn-syn
stmt s1, s2;
Select <s1,s2> such that Parent(s1, s2) and Parent(s2, s1)
none
5000
180 - PARENT: 2 clauses (similar) - fixed-syn, fixed-syn
stmt s;
Select s such that Parent(15, s) and Parent(17, s)
none
5000
181 - PARENT: 2 clauses (similar) - syn-fixed, syn-fixed
while w;
Select w such that Parent(15, w) and Parent(w, 18)
17
5000
182 - PARENT: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Parent(5, _) and Parent(20, _)
true
5000
183 - PARENT: 2 clauses (similar) - generic-fixed, generic-fixed
stmt s
Select s such that Parent(_, 12) and Parent(_, 22)
none
5000
184 - PARENT: 2 clauses (similar) - syn-generic, syn-generic
while w; if i;
Select <i,w> such that Parent(w, _) and Parent(i, _)
20 5, 20 15, 20 17, 20 18
5000
185 - PARENT: 2 clauses (similar) - generic-syn, generic-syn
stmt s; if i;
Select i such that Parent(_, s) and Parent(_, i)
20
5000
186 - PARENT: 2 clauses (mixed) - fixed-fixed, fixed-syn
stmt s;
Select s such that Parent(15, 23) and Parent(20, s)
21, 22
5000
187 - PARENT: 2 clauses (mixed) - syn-syn, syn-fixed
stmt s1, s2;
Select <s1,s2> such that Parent(s1, s2) and Parent(s1, 18)
17 18, 17 20
5000
188 - PARENT: 2 clauses (mixed) - generic-generic, fixed-generic
while w;
Select w such that Parent(_, _) and Parent(20, _)
5, 15, 17, 18
5000
189 - PARENT: 2 clauses (mixed) - fixed-syn, generic-fixed
assign a;
Select a such that Parent(5, a) and Parent(_, 23)
6, 7, 8
5000
190 - PARENT: 2 clauses (mixed) - syn-fixed, syn-generic
if i; assign a;
Select  such that Parent(i, 22) and Parent(a, _)
none
5000
191 - PARENT: 2 clauses (mixed) - fixed-generic, generic-syn

Select BOOLEAN such that Parent(18, _) and Parent(_, 18)
true
5000
192 - PARENT: 2 clauses (mixed) - generic-fixed, syn-generic
stmt s;
Select s such that Parent(_, 16) and Parent(s, _)
5, 15, 17, 18, 20
5000
193 - PARENT: 2 clauses (mixed) - syn-generic, generic-syn
while w;
Select w such that Parent(w, _) and Parent(_, w)
17, 18
5000
194 - PARENT: 2 clauses (mixed) - generic-fixed, generic-syn
assign a;
Select a such that Parent(_, 21) and Parent(_, a)
6, 7, 8, 16, 19, 21, 22, 23
5000
195 - PARENT: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Parent(15, a)
16, 23
5000
196 - PARENT: stmt# - select clause (no results)
assign a;
Select a.stmt# such that Parent(16, a)
none
5000
197 - PARENT: stmt# - with clause (has results)
while w;
Select w such that Parent(w, _) with w.stmt# = 15
15
5000
198 - PARENT: stmt# - with clause (no results)
while w;
Select w such that Parent(w, _) with w.stmt# = 15 and w.stmt# = 17
none
5000
199 - PARENT: prog_line
prog_line n;
Select n such that Parent(n, _)
5, 15, 17, 18, 20
5000
200 - PARENT: stmt overflow
stmt s;
Select s such that Parent(45, s)
none
5000
201 - PARENT: stmt underflow
stmt s;
Select s such that Parent(-1, s)
none
5000
202 - PARENT: stmt underflow
variable s;
Select s such that Parent(0, s)
none
5000
203 - PARENT: invalid argument
assign a;
Select a such that Parent(a, "helloworld")
none
5000
204 - PARENT*-boolean: fixed-fixed (regular stmt)

Select BOOLEAN such that Parent*(15, 22)
true
5000
205 - PARENT*-stmt: fixed-fixed (while stmt)
stmt s;
Select s such that Parent*(15, 18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
206 - PARENT*-boolean: fixed-fixed (if stmt, if block)

Select BOOLEAN such that Parent*(20, 21)
true
5000
207 - PARENT*-boolean: fixed-fixed (fi stmt, then block)

Select BOOLEAN such that Parent*(20, 22)
true
5000
208 - PARENT*-stmt: fixed-fixed (false)
stmt s;
Select s such that Parent*(14, 15)
none
5000
209 - PARENT*-stmt: syn-syn (tuple)
stmt s1, s2;
Select <s1,s2> such that Parent*(s1, s2)
5 6, 5 7, 5 8, 15 16, 15 17, 15 18, 15 19, 15 20, 15 21, 15 22, 15 23, 17 18, 17 19, 17 20, 17 21, 17 22, 18 19, 20 21, 20 22
5000
210 - PARENT*-assign: syn-syn
stmt s; assign a;
Select a such that Parent*(s, a)
6, 7, 8, 16, 19, 21, 22, 23
5000
211 - PARENT*-while: syn-syn
while w1, w2;
Select <w1,w2> such that Parent*(w1, w2)
15 17, 15 18, 17 18
5000
212 - PARENT*-if: syn-syn
stmt s; if i;
Select i such that Parent*(i, s)
20
5000
213 - PARENT*-boolean: generic-generic

Select BOOLEAN such that Parent*(_, _)
true
5000
214 - PARENT*-assign: fixed-syn (while stmt)
assign a;
Select a such that Parent*(17, a)
19, 21, 22
5000
215 - PARENT*-stmt: fixed-syn (if stmt)
stmt s;
Select s such that Parent*(20, s)
21, 22
5000
216 - PARENT*-stmt: syn-fixed
stmt s;
Select s such that Parent*(s, 19)
15, 17, 18
5000
217 - PARENT*-while: syn-fixed
while w;
Select w such that Parent*(w, 21)
15, 17
5000
218 - PARENT*-if: syn-fixed
if i;
Select i such that Parent*(i, 22)
20
5000
219 - PARENT*-boolean: fixed-generic

Select BOOLEAN such that Parent*(14, _)
false
5000
220 - PARENT*-boolean: generic-fixed

Select BOOLEAN such that Parent*(_, 23)
true
5000
221 - PARENT*-assign: syn-generic
assign a;
Select a such that Parent*(a, _)
none
5000
222 - PARENT*-while: syn-generic
while w;
Select w such that Parent*(w, _)
5, 15, 17, 18
5000
223 - PARENT*-if: syn-generic
if i;
Select i such that Parent*(i, _)
20
5000
224 - PARENT*-stmt: generic-syn
stmt s;
Select s such that Parent*(_, s)
6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 23
5000
225 - PARENT*-assign: generic-syn
assign a;
Select a such that Parent*(_, a)
6, 7, 8, 16, 19, 21, 22, 23
5000
226 - PARENT*-while: generic-syn
while w;
Select w such that Parent*(_, w)
17, 18
5000
227 - PARENT*-if: generic-syn
if i;
Select i such that Parent*(_, i)
20
5000
228 - PARENT*-while: pattern-left defined
while w;
Select w such that Parent*(15, w) pattern w("battle3", _)
18
5000
229 - PARENT*-while: pattern-left defined synonym
while w; variable v;
Select w such that Parent*(15, w) pattern w(v, _)
17, 18
5000
230 - PARENT*-if: pattern-left defined
if i;
Select i such that Parent*(i, 22) pattern i("squirtle", _, _)
none
5000
231 - PARENT*-if: pattern-left defined synonym
if i; variable v;
Select i such that Parent*(i, 21) pattern i(v, _, _)
20
5000
232 - PARENT*: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Parent*(15, 17) and Parent*(17, 18)
true
5000
233 - PARENT*: 2 clauses (similar) - syn-syn, syn-syn
stmt s1, s2;
Select <s1,s2> such that Parent*(s1, s2) and Parent*(s2, s1)
none
5000
234 - PARENT*: 2 clauses (similar) - fixed-syn, fixed-syn
stmt s;
Select s such that Parent*(15, s) and Parent*(17, s)
18, 19, 20, 21, 22
5000
235 - PARENT*: 2 clauses (similar) - syn-fixed, syn-fixed
while w;
Select w such that Parent*(15, w) and Parent*(w, 18)
17
5000
236 - PARENT*: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Parent*(5, _) and Parent*(20, _)
true
5000
237 - PARENT*: 2 clauses (similar) - generic-fixed, generic-fixed
stmt s
Select s such that Parent*(_, 12) and Parent*(_, 22)
none
5000
238 - PARENT*: 2 clauses (similar) - syn-generic, syn-generic
while w; if i;
Select <i,w> such that Parent*(w, _) and Parent*(i, _)
20 5, 20 15, 20 17, 20 18
5000
239 - PARENT*: 2 clauses (similar) - generic-syn, generic-syn
stmt s; if i;
Select i such that Parent*(_, s) and Parent*(_, i)
20
5000
240 - PARENT*: 2 clauses (mixed) - fixed-fixed, fixed-syn
stmt s;
Select s such that Parent*(15, 23) and Parent*(20, s)
21, 22
5000
241 - PARENT*: 2 clauses (mixed) - syn-syn, syn-fixed
stmt s1, s2;
Select <s1,s2> such that Parent*(s1, s2) and Parent*(s1, 18)
15 16, 15 17, 15 18, 15 19, 15 20, 15 21, 15 22, 15 23, 17 18, 17 19, 17 20, 17 21, 17 22
5000
242 - PARENT*: 2 clauses (mixed) - generic-generic, fixed-generic
while w;
Select w such that Parent*(_, _) and Parent*(20, _)
5, 15, 17, 18
5000
243 - PARENT*: 2 clauses (mixed) - fixed-syn, generic-fixed
assign a;
Select a such that Parent*(5, a) and Parent*(_, 23)
6, 7, 8
5000
244 - PARENT*: 2 clauses (mixed) - syn-fixed, syn-generic
if i; assign a;
Select  such that Parent*(i, 22) and Parent*(a, _)
none
5000
245 - PARENT*: 2 clauses (mixed) - fixed-generic, generic-syn

Select BOOLEAN such that Parent*(18, _) and Parent*(_, 18)
true
5000
246 - PARENT*: 2 clauses (mixed) - generic-fixed, syn-generic
stmt s;
Select s such that Parent*(_, 16) and Parent*(s, _)
5, 15, 17, 18, 20
5000
247 - PARENT*: 2 clauses (mixed) - syn-generic, generic-syn
while w;
Select w such that Parent*(w, _) and Parent*(_, w)
17, 18
5000
248 - PARENT*: 2 clauses (mixed) - generic-fixed, generic-syn
assign a;
Select a such that Parent*(_, 21) and Parent*(_, a)
6, 7, 8, 16, 19, 21, 22, 23
5000
249 - PARENT*: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Parent*(15, a)
16, 19, 21, 22, 23
5000
250 - PARENT*: stmt# - select clause (no results)
assign a;
Select a.stmt# such that Parent*(16, a)
none
5000
251 - PARENT*: stmt# - with clause (has results)
while w;
Select w such that Parent*(w, _) with w.stmt# = 15
15
5000
252 - PARENT*: stmt# - with clause (no results)
while w;
Select w such that Parent*(w, _) with w.stmt# = 15 and w.stmt# = 17
none
5000
253 - PARENT*: prog_line
prog_line n;
Select n such that Parent*(n, _)
5, 15, 17, 18, 20
5000
254 - PARENT*: stmt overflow
stmt s;
Select s such that Parent*(45, s)
none
5000
255 - PARENT*: stmt underflow
stmt s;
Select s such that Parent*(-1, s)
none
5000
256 - PARENT*: stmt underflow
variable s;
Select s such that Parent*(0, s)
none
5000
257 - PARENT*: invalid argument
assign a;
Select a such that Parent*(a, "helloworld")
none
5000
258 - FOLLOWS-boolean: fixed-fixed (regular stmt)

Select BOOLEAN such that Follows(1, 2)
true
5000
259 - FOLLOWS-stmt: fixed-fixed (while stmt)
stmt s;
Select s such that Follows(5, 9)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
260 - FOLLOWS-boolean: fixed-fixed (if stmt)

Select BOOLEAN such that Follows(20, 21)
false
5000
261 - FOLLOWS-stmt: syn-syn (tuple)
stmt s1, s2;
Select <s1,s2> such that Follows(s1, s2)
1 2, 2 3, 3 4, 4 5, 6 7, 7 8, 5 9, 9 10, 10 11, 11 12, 12 13, 13 14, 14 15, 16 17, 17 23, 18 20
5000
262 - FOLLOWS-assign: syn-syn
assign a1, a2;
Select a2 such that Follows(a1, a2)
2, 3, 4, 7, 8, 10, 11, 12, 13, 14
5000
263 - FOLLOWS-while: syn-syn
while w1; stmt s;
Select w1 such that Follows(w1, s)
5, 17, 18
5000
264 - FOLLOWS-if: syn-syn
if i1, i2;
Select i1 such that Follows(i1, i2)
none
5000
265 - FOLLOWS-boolean: generic-generic

Select BOOLEAN such that Follows(_, _)
true
5000
266 - FOLLOWS-stmt: fixed-syn
stmt s;
Select s such that Follows(11, s)
12
5000
267 - FOLLOWS-while: fixed-syn
while w;
Select w such that Follows(17, w)
none
5000
268 - FOLLOWS-if: fixed-syn
if i;
Select i such that Follows(9, i)
none
5000
269 - FOLLOWS-stmt: syn-fixed
stmt s;
Select s such that Follows(s, 14)
13
5000
270 - FOLLOWS-assign: syn-fixed
assign a;
Select a such that Follows(a, 23)
none
5000
271 - FOLLOWS-while: syn-fixed
while w;
Select w such that Follows(w, 14)
none
5000
272 - FOLLOWS-if: syn-fixed
if i;
Select i such that Follows(i, 23)
none
5000
273 - FOLLOWS-boolean: fixed-generic

Select BOOLEAN such that Follows(18, _)
true
5000
274 - FOLLOWS-boolean: generic-fixed

Select BOOLEAN such that Follows(_, 23)
true
5000
275 - FOLLOWS-assign: syn-generic
assign a;
Select a such that Follows(a, _)
1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16
5000
276 - FOLLOWS-while: syn-generic
while w;
Select w such that Follows(w, _)
5, 17, 18
5000
277 - FOLLOWS-if: syn-generic
if i;
Select i such that Follows(i, _)
none
5000;
278 - FOLLOWS-boolean : generic-syn
stmt s;
Select BOOLEAN such that Follows(_, s)
true
5000
279 - FOLLOWS-assign: pattern-right defined (match select)
assign a;
Select a such that Follows(a, _) pattern a(_, _"charmeleon"_)
12, 13
5000
280 - FOLLOWS-assign: pattern-right defined (does not match select)
assign a1, a2;
Select a1 such that Follows(a1, 12) pattern a2(_, _"4"_)
none
5000
281 - FOLLOWS-assign: pattern-left defined (match select)
assign a;
Select a such that Follows(a, _) pattern a("ivysaur", _)
11
5000
282 - FOLLOWS-assign: pattern-left defined (does not match select)
assign a1, a2;
Select a1 such that Follows(a1, 4) pattern a2("lastPokemon", _)
3
5000
283 - FOLLOWS-assign: pattern-left defined synonym
assign a; variable v;
Select a such that Follows(a, _) pattern a(v, _)
1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16
5000
284 - FOLLOWS-assign: pattern-both defined (match select)
assign a;
Select a such that Follows(a, _) pattern a("wartortle", _"squirtle"_)
10
5000
285 - FOLLOWS-assign: pattern-both defined (does not match select)
assign a1, a2;
Select a1 such that Follows(a1, 1) pattern a2("battle2", "charmeleon")
none
5000
286 - FOLLOWS-assign: pattern-both defined, left synonym
assign a; variable v;
Select a such that Follows(a, _) pattern a(v, _"squirtle"_)
10, 14
5000
287 - FOLLOWS-while: pattern (match select)
while w;
Select w such that Follows(w, _) pattern w("battle3", _)
18
5000
288 - FOLLOWS-while: pattern (does not match select)
stmt s; while w;
Select s such that Follows(s, w) pattern w("battle4", _)
none
5000
289 - FOLLOWS-while: pattern, left synonym
while w; variable v;
Select w such that Follows(_, w) pattern w(v, _)
5, 15, 17
5000
290 - FOLLOWS-if: pattern (match select)
if i;
Select i such that Follows(i, _) pattern i("wartortle", _, _)
none
5000
291 - FOLLOWS-if: pattern (does not match select)
assign a; if i;
Select a such that Follows(a, _) pattern i("battle2", _, _)
none
5000
292 - FOLLOWS-if: pattern, left synonym
if i; variable v;
Select i such that Follows(_, i) pattern i(v, _, _)
20
5000
293 - FOLLOWS: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Follows(6, 7) and Follows(18, 20)
true
5000
294 - FOLLOWS: 2 clauses (similar) - syn-syn, syn-syn
stmt s1, s2, s3;
Select s1 such that Follows(s1, s2) and Follows(s3, s1)
2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 17
5000
295 - FOLLOWS: 2 clauses (similar) - fixed-syn, fixed-syn
stmt s;
Select s such that Follows(5, s) and Follows(15, s)
none
5000
296 - FOLLOWS: 2 clauses (similar) - syn-fixed, syn-fixed
assign a; while w;
Select a such that Follows(a, 15) and Follows(w, 23)
14
5000
297 - FOLLOWS: 2 clauses (similar) - fixed-generic, fixed-generic
stmt s;
Select s such that Follows(13, _) and Follows(9, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
298 - FOLLOWS: 2 clauses (similar) - generic-fixed, generic-fixed

Select BOOLEAN such that Follows(_, 15) and Follows(_, 23)
true
5000
299 - FOLLOWS: 2 clauses (similar) - syn-generic, syn-generic
while w; if i;
Select <w,i> such that Follows(w, _) and Follows(i, _)
none
5000
300 - FOLLOWS: 2 clauses (similar) - generic-syn, generic-syn
while w; if i;
Select w such that Follows(_, w) and Follows(_, i)
5, 15, 17
5000
301 - FOLLOWS: 2 clauses (mixed) - fixed-fixed, fixed-syn
assign a;
Select BOOLEAN such that Follows(1, 2) and Follows(4, a)
false
5000
302 - FOLLOWS: 2 clauses (mixed) - syn-syn, syn-fixed
assign a1, a2;
Select a2 such that Follows(a1, a2) and Follows(a1, 7)
7
5000
303 - FOLLOWS: 2 clauses (mixed) - generic-generic, fixed-generic

Select BOOLEAN such that Follows(_, _) and Follows(18, _)
true
5000
304 - FOLLOWS: 2 clauses (mixed) - fixed-syn, generic-fixed
stmt s;
Select s such that Follows(12, s) and Follows(_, 23)
13
5000
305 - FOLLOWS: 2 clauses (mixed) - syn-fixed, syn-generic
stmt s;
Select s such that Follows(s, 17) and Follows(s, _)
16
5000
306 - FOLLOWS: 2 clauses (mixed) - fixed-generic, generic-syn
if i;
Select i such that Follows(15, _) and Follows(_, i)
none
5000
307 - FOLLOWS: 2 clauses (mixed) - generic-fixed, syn-generic
assign a;
Select a such that Follows(_, 9) and Follows(a, _)
1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16
5000
308 - FOLLOWS: 2 clauses (mixed) - syn-generic, generic-syn
stmt s;
Select s such that Follows(s, _) and Follows(_, s)
2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 17
5000
309 - FOLLOWS: 2 clauses (mixed) - generic-fixed, generic-syn
while w;
Select BOOLEAN such that Follows(_, 20) and Follows(_, w)
true
5000
310 - FOLLOWS: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Follows(a, _)
1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16
5000
311 - FOLLOWS: stmt# - select clause (no results)
if i;
Select i.stmt# such that Follows(i, _)
none
5000
312 - FOLLOWS: stmt# - with clause (has results)
while w;
Select w such that Follows(_, w) with w.stmt# = 17
17
5000
313 - FOLLOWS: stmt# - with clause (no results)
stmt s; while w;
Select w such that Follows(_, w) with w.stmt# = 1
none
5000
314 - FOLLOWS: prog_line
prog_line n; if i;
Select n such that Follows(n, i)
18
5000
315 - FOLLOWS: stmt overflow
variable v;
Select v such that Follows(45, v)
none
5000
316 - FOLLOWS: stmt underflow
variable v;
Select v such that Follows(-1, v)
none
5000
317 - FOLLOWS: invalid argument
variable v;
Select v such that Follows(1, v)
none
5000
318 - FOLLOWS: invalid argument
procedure p;
Select p such that Follows(1, p)
none
5000
319 - FOLLOWS*-boolean: fixed-fixed (regular stmt)

Select BOOLEAN such that Follows*(1, 4)
true
5000
320 - FOLLOWS*-stmt: fixed-fixed (while stmt)
stmt s;
Select s such that Follows*(5, 12)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
321 - FOLLOWS*-boolean: fixed-fixed (if stmt)

Select BOOLEAN such that Follows*(20, 21)
false
5000
322 - FOLLOWS*-stmt: syn-syn (tuple)
stmt s1, s2;
Select <s1,s2> such that Follows*(s1, s2)
1 2, 1 3, 1 4, 1 5, 1 9, 1 10, 1 11, 1 12, 1 13, 1 14, 1 15, 2 3, 2 4, 2 5, 2 9, 2 10, 2 11, 2 12, 2 13, 2 14, 2 15, 3 4, 3 5, 3 9, 3 10, 3 11, 3 12, 3 13, 3 14, 3 15, 4 5, 4 9, 4 10, 4 11, 4 12, 4 13, 4 14, 4 15, 5 9, 5 10, 5 11, 5 12, 5 13, 5 14, 5 15, 6 7, 6 8, 7 8, 9 10, 9 11, 9 12, 9 13, 9 14, 9 15, 10 11, 10 12, 10 13, 10 14, 10 15, 11 12, 11 13, 11 14, 11 15, 12 13, 12 14, 12 15, 13 14, 13 15, 14 15, 16 17, 16 23, 17 23, 18 20
5000
323 - FOLLOWS*-assign: syn-syn
assign a1, a2;
Select a2 such that Follows*(a1, a2)
2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 23
5000
324 - FOLLOWS*-while: syn-syn
while w1; stmt s;
Select w1 such that Follows*(w1, s)
5, 17, 18
5000
325 - FOLLOWS*-if: syn-syn
if i1, i2;
Select i1 such that Follows*(i1, i2)
none
5000
326 - FOLLOWS*-boolean: generic-generic

Select BOOLEAN such that Follows*(_, _)
true
5000
327 - FOLLOWS*-stmt: fixed-syn
stmt s;
Select s such that Follows*(11, s)
12, 13, 14, 15
5000
328 - FOLLOWS*-while: fixed-syn
while w;
Select w such that Follows*(17, w)
none
5000
329 - FOLLOWS*-if: fixed-syn
if i;
Select i such that Follows*(9, i)
none
5000
330 - FOLLOWS*-stmt: syn-fixed
stmt s;
Select s such that Follows*(s, 14)
1, 2, 3, 4, 5, 9, 10, 11, 12, 13
5000
331 - FOLLOWS*-assign: syn-fixed
assign a;
Select a such that Follows*(a, 14)
1, 2, 3, 4, 9, 10, 11, 12, 13
5000
332 - FOLLOWS*-while: syn-fixed
while w;
Select w such that Follows*(w, 14)
5
5000
333 - FOLLOWS*-if: syn-fixed
if i;
Select i such that Follows*(i, 23)
none
5000
334 - FOLLOWS*-boolean: fixed-generic

Select BOOLEAN such that Follows*(18, _)
true
5000
335 - FOLLOWS*-boolean: generic-fixed

Select BOOLEAN such that Follows*(_, 23)
true
5000
336 - FOLLOWS*-assign: syn-generic
assign a;
Select a such that Follows*(a, _)
1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16
5000
337 - FOLLOWS*-while: syn-generic
while w;
Select w such that Follows*(w, _)
5, 17, 18
5000
338 - FOLLOWS*-if: syn-generic
if i;
Select i such that Follows*(i, _)
none
5000;
339 - FOLLOWS*-boolean : generic-syn
stmt s;
Select BOOLEAN such that Follows*(_, s)
true
5000
340 - FOLLOWS*-assign: pattern-right defined (match select)
assign a;
Select a such that Follows*(a, _) pattern a(_, _"charmeleon"_)
12, 13
5000
341 - FOLLOWS*-assign: pattern-right defined (does not match select)
assign a1, a2;
Select a1 such that Follows*(a1, 12) pattern a2(_, _"4"_)
none
5000
342 - FOLLOWS*-assign: pattern-left defined (match select)
assign a;
Select a such that Follows*(a, _) pattern a("ivysaur", _)
11
5000
343 - FOLLOWS*-assign: pattern-left defined (does not match select)
assign a1, a2;
Select a1 such that Follows*(a1, 4) pattern a2("lastPokemon", _)
1, 2, 3
5000
344 - FOLLOWS*-asisgn: pattern-left defined synonym
assign a; variable v;
Select a such that Follows*(_, a) pattern a(v, _)
2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 23
5000
345 - FOLLOWS*-assign: pattern-both defined (match select)
assign a;
Select a such that Follows(a, _) pattern a("wartortle", _"squirtle"_)
10
5000
346 - FOLLOWS*-assign: pattern-both defined (does not match select)
assign a1, a2;
Select a1 such that Follows*(a1, 1) pattern a2("battle2", "charmeleon")
none
5000
347 - FOLLOWS*-assign: pattern-both defined, left synonym
assign a; variable v;
Select a such that Follows*(a, _) pattern a(v, _"charmander"_)
6, 9
5000
348 - FOLLOWS*-while: pattern (match select)
while w;
Select w such that Follows*(w, _) pattern w("battle3", _)
18
5000
349 - FOLLOWS*-while: pattern (does not match select)
stmt s; while w;
Select s such that Follows*(s, w) pattern w("battle4", _)
none
5000
350 - FOLLOWS*-while: pattern, left synonym
while w; variable v;
Select w such that Follows*(w, _) pattern w(v, _)
5, 17, 18
5000
351 - FOLLOWS*-if: pattern (match select)
if i;
Select i such that Follows*(i, _) pattern i("wartortle", _, _)
none
5000
352 - FOLLOWS*-if: pattern (does not match select)
assign a; if i;
Select a such that Follows*(a, _) pattern i("battle2", _, _)
none
5000
353 - FOLLOWS*-if: pattern, left synonym
if i; variable v;
Select i such that Follows*(_, i) pattern i(v, _, _)
20
5000
354 - FOLLOWS*: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Follows*(6, 7) and Follows*(18, 20)
true
5000
355 - FOLLOWS*: 2 clauses (similar) - syn-syn, syn-syn
stmt s1, s2, s3;
Select s1 such that Follows*(s1, s2) and Follows*(s3, s1)
2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 17
5000
356 - FOLLOWS*: 2 clauses (similar) - fixed-syn, fixed-syn
stmt s;
Select s such that Follows*(5, s) and Follows*(15, s)
none
5000
357 - FOLLOWS*: 2 clauses (similar) - syn-fixed, syn-fixed
assign a; while w;
Select a such that Follows*(a, 15) and Follows*(w, 23)
1, 2, 3, 4, 9, 10, 11, 12, 13, 14
5000
358 - FOLLOWS*: 2 clauses (similar) - fixed-generic, fixed-generic
stmt s;
Select s such that Follows*(13, _) and Follows*(9, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
359 - FOLLOWS*: 2 clauses (similar) - generic-fixed, generic-fixed

Select BOOLEAN such that Follows*(_, 15) and Follows*(_, 23)
true
5000
360 - FOLLOWS*: 2 clauses (similar) - syn-generic, syn-generic
while w; if i;
Select <w,i> such that Follows*(w, _) and Follows*(i, _)
none
5000
361 - FOLLOWS*: 2 clauses (similar) - generic-syn, generic-syn
while w; if i;
Select w such that Follows*(_, w) and Follows*(_, i)
5, 15, 17
5000
362 - FOLLOWS*: 2 clauses (mixed) - fixed-fixed, fixed-syn
assign a;
Select BOOLEAN such that Follows*(1, 2) and Follows*(4, a)
true
5000
363 - FOLLOWS*: 2 clauses (mixed) - syn-syn, syn-fixed
assign a1, a2;
Select a2 such that Follows*(a1, a2) and Follows*(a1, 7)
7, 8
5000
364 - FOLLOWS*: 2 clauses (mixed) - generic-generic, fixed-generic

Select BOOLEAN such that Follows*(_, _) and Follows*(18, _)
true
5000
365 - FOLLOWS*: 2 clauses (mixed) - fixed-syn, generic-fixed
stmt s;
Select s such that Follows*(12, s) and Follows*(_, 23)
13, 14, 15
5000
366 - FOLLOWS*: 2 clauses (mixed) - syn-fixed, syn-generic
stmt s;
Select s such that Follows*(s, 17) and Follows*(s, _)
16
5000
367 - FOLLOWS*: 2 clauses (mixed) - fixed-generic, generic-syn
if i;
Select i such that Follows*(15, _) and Follows*(_, i)
none
5000
368 - FOLLOWS*: 2 clauses (mixed) - generic-fixed, syn-generic
assign a;
Select a such that Follows*(_, 9) and Follows*(a, _)
1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16
5000
369 - FOLLOWS*: 2 clauses (mixed) - syn-generic, generic-syn
stmt s;
Select s such that Follows*(s, _) and Follows*(_, s)
2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 17
5000
370 - FOLLOWS*: 2 clauses (mixed) - generic-fixed, generic-syn
while w;
Select BOOLEAN such that Follows*(_, 20) and Follows*(_, w)
true
5000
371 - FOLLOWS*: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Follows*(a, _)
1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16
5000
372 - FOLLOWS*: stmt# - select clause (no results)
if i;
Select i.stmt# such that Follows*(i, _)
none
5000
373 - FOLLOWS*: stmt# - with clause (has results)
while w;
Select w such that Follows*(_, w) with w.stmt# = 17
17
5000
374 - FOLLOWS*: stmt# - with clause (no results)
stmt s; while w;
Select w such that Follows*(_, w) with w.stmt# = 1
none
5000
375 - FOLLOWS*: prog_line
prog_line n; while w;
Select n such that Follows*(n, w)
1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 16
5000
376 - FOLLOWS*: stmt overflow
variable v;
Select v such that Follows*(45, v)
none
5000
377 - FOLLOWS*: stmt underflow
variable v;
Select v such that Follows*(-1, v)
none
5000
378 - FOLLOWS*: invalid argument
variable v;
Select v such that Follows*(1, v)
none
5000
379 - FOLLOWS*: invalid argument
procedure p;
Select p such that Follows*(1, p)
none
5000
380 - NEXT-boolean: fixed-fixed (regular stmt)

Select BOOLEAN such that Next(7, 8)
true
5000
381 - NEXT-stmt: fixed-fixed (while stmt)
stmt s;
Select s such that Next(14, 15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
382 - NEXT-boolean: fixed-fixed (loop while stmt)

Select BOOLEAN such that Next(23, 15)
true
5000
383 - NEXT-boolean: fixed-fixed (if stmt)

Select BOOLEAN such that Next(18, 20)
true
5000
384 - NEXT-boolean: fixed-fixed (if stmt to then block)

Select BOOLEAN such that Next(20, 22)
true
5000
385 - NEXT-stmt: fixed-fixed (false)
stmt s;
Select s such that Next(21, 22)
none
5000
386 - NEXT-stmt: syn-syn (tuple)
stmt s1, s2;
Select <s1,s2> such that Next(s1, s2)
1 2, 2 3, 3 4, 4 5, 5 6, 5 9, 6 7, 7 8, 8 5, 9 10, 10 11, 11 12, 12 13, 13 14, 14 15, 15 16, 16 17, 17 18, 17 23, 18 19, 18 20, 19 18, 20 21, 20 22, 21 17, 22 17, 23 15
5000
387 - NEXT-assign: syn-syn
assign a1, a2;
Select a1 such that Next(a1, a2)
1, 2, 3, 6, 7, 9, 10, 11, 12, 13
5000
388 - NEXT-while: syn-syn
while w1, w2;
Select w1 such that Next(w1, w2)
17
5000
389 - NEXT-if: syn-syn
if i; stmt s;
Select i such that Next(i, s)
20
5000
390 - NEXT-boolean: generic-generic

Select BOOLEAN such that Next(_, _)
true
5000
391 - NEXT-stmt: fixed-syn (regular stmt)
stmt s;
Select s such that Next(12, s)
13
5000
392 - NEXT-assign: fixed-syn (while stmt)
assign a;
Select a such that Next(17, a)
23
5000
393 - NEXT-while: fixed-syn (if stmt)
while w;
Select w such that Next(20, w)
none
5000
394 - NEXT-stmt: syn-fixed
stmt s;
Select s such that Next(s, 14)
13
5000
395 - NEXT-assign: syn-fixed
assign a;
Select a such that Next(a, 10)
9
5000
396 - NEXT-while: syn-fixed
while w;
Select w such that Next(w, 18)
17
5000
397 - NEXT-if: syn-fixed
if i;
Select i such that Next(i, 21)
20
5000
398 - NEXT-boolean: fixed-generic

Select BOOLEAN such that Next(22, _)
true
5000
399 - NEXT-boolean: generic-fixed

Select BOOLEAN such that Next(_, 18)
true
5000
400 - NEXT-assign: syn-generic
assign a;
Select a such that Next(a, _)
1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
401 - NEXT-while: syn-generic
while w;
Select w such that Next(w, _)
5, 15, 17, 18
5000
402 - NEXT-if: syn-generic
if i;
Select i such that Next(i, _)
20
5000
403 - NEXT-stmt: generic-syn
stmt s;
Select s such that Next(_, s)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
404 - NEXT-while: generic-syn
while w;
Select w such that Next(_, w)
5, 15, 17, 18
5000
405 - NEXT-if: generic-syn
if i;
Select i such that Next(_, i)
20
5000
406 - NEXT-assign: pattern-right defined (match select)
assign a; while w;
Select a such that Next(a, w) pattern a(_, _"1"_)
8, 22
5000
407 - NEXT-while: pattern-right defined (does not match select)
while w; assign a;
Select w such that Next(w, a) pattern a(_, _"ivysaur"_)
15
5000
408 - NEXT-while: pattern-left defined (match select)
while w;
Select w such that Next(_, w) pattern w("battle1", _)
15
5000
409 - NEXT-stmt: pattern-left defined (does not match select)
stmt s; assign a;
Select s such that Next(s, _) pattern a("charmander", _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
410 - NEXT-assign: pattern-left defined synonym
assign a; variable v;
Select a such that Next(a, _) pattern a(v, _)
1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
411 - NEXT-assign: pattern-both defined (match select)
assign a; while w;
Select a such that Next(a, w) pattern a("battle3", "squirtle - ivysaur")
14
5000
412 - NEXT-while: pattern-both defined (match does not select)
while w; assign a;
Select w such that Next(_, w) pattern a("wartortle", "wartortle - 1")
5, 15, 17, 18
5000
413 - NEXT-while: pattern-both defined, left synonym
while w; variable v;
Select w such that Next(w, _) pattern w(v, _)
5, 15, 17, 18
5000
414 - NEXT-if: pattern (match select)
if i;
Select i such that Next(i, _) pattern i("wartortle", _, _)
20
5000
415 - NEXT-if: pattern (does not match select)
if i; assign a;
Select i such that Next(i, a) pattern a(_, "squirtle + 3")
20
5000
416 - NEXT-if: pattern, left synonym
if i; variable v;
Select i such that Next(i, _) pattern i(v, _, _)
20
5000
417 - NEXT: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Next(1, 2) and Next(7, 8)
true
5000
418 - NEXT: 2 clauses (similar) - syn-syn, syn-syn
stmt s; while w; assign a;
Select <s,w> such that Next(s, w) and Next(a, w)
4 5, 8 5, 14 15, 23 15, 16 17, 21 17, 22 17, 17 18, 19 18
5000
419 - NEXT: 2 clauses (similar) - fixed-syn, fixed-syn
stmt s;
Select s such that Next(14, s) and Next(23, s)
15
5000
420 - NEXT: 2 clauses (similar) - syn-fixed, syn-fixed
assign a; while w;
Select a such that Next(a, 17) and Next (w, 13)
none
5000
421 - NEXT: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Next(23, _) and Next(22, _)
true
5000
422 - NEXT: 2 clauses (similar) - generic-fixed, generic-fixed
stmt s; while w;
Select s such that Next(_, s) and Next(_, w)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
423 - NEXT: 2 clauses (similar) - syn-generic, syn-generic
assign a; if i;
Select i such that Next(a, _) and Next(i, _)
20
5000
424 - NEXT: 2 clauses (similar) - generic-syn, generic-syn
assign a; while w;
Select w such that Next(_, a) and Next(_, w)
5, 15, 17, 18
5000
425 - NEXT: 2 clauses (mixed) - fixed-fixed, fixed-syn
stmt s;
Select s such that Next(22, 17) and Next(16, s)
17
5000
426 - NEXT: 2 clauses (mixed) - syn-syn, syn-fixed
assign a; if i;
Select a such that Next(i, a) and Next(a, 14)
none
5000
427 - NEXT: 2 clauses (mixed) - generic-generic, fixed-generic

Select BOOLEAN such that Next(_, _) and Next(23, _)
true
5000
428 - NEXT: 2 clauses (mixed) - fixed-syn, generic-fixed
while w;
Select w such that Next(17, w) and Next(_, w)
18
5000
429 - NEXT: 2 clauses (mixed) - syn-fixed, syn-generic
stmt s;
Select s such that Next(s, 22) and Next(s, _)
20
5000
430 - NEXT: 2 clauses (mixed) - fixed-generic, generic-syn
assign a;
Select a such that Next(5, _) and Next(_, a)
2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
431 - NEXT: 2 clauses (mixed) - generic-fixed, syn-generic
while w;
Select w such that Next(_, 21) and Next(w, _)
5, 15, 17, 18
5000
432 - NEXT: 2 clauses (mixed) - syn-generic, generic-syn
assign a; while w;
Select <a,w> such that Next(w, _) and Next(_, a)
2 5, 2 15, 2 17, 2 18, 3 5, 3 15, 3 17, 3 18, 4 5, 4 15, 4 17, 4 18, 6 5, 6 15, 6 17, 6 18, 7 5, 7 15, 7 17, 7 18, 8 5, 8 15, 8 17, 8 18, 9 5, 9 15, 9 17, 9 18, 10 5, 10 15, 10 17, 10 18, 11 5, 11 15, 11 17, 11 18, 12 5, 12 15, 12 17, 12 18, 13 5, 13 15, 13 17, 13 18, 14 5, 14 15, 14 17, 14 18, 16 5, 16 15, 16 17, 16 18, 19 5, 19 15, 19 17, 19 18, 21 5, 21 15, 21 17, 21 18, 22 5, 22 15, 22 17, 22 18, 23 5, 23 15, 23 17, 23 18
5000
433 - NEXT: 2 clauses (mixed) - generic-fixed, generic-syn
stmt s;
Select  such that Next(_, 1) and Next(_, s)
none
5000
434 - NEXT: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Next(a, _)
1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
435 - NEXT: stmt# - select clause (no results)
if i; assign a;
Select i.stmt# such that Next(a, i)
none
5000
436 - NEXT: stmt# - with clause (has results)
while w;
Select w such that Next(w, _) with w.stmt# = 17
17
5000
437 NEXT: stmt# - with clause (no results)
if i;
Select i such that Next(i, _) with i.stmt# = 5
none
5000
438 - NEXT: prog_line
prog_line n; if i;
Select n such that Next(n, i)
18
5000
439 - NEXT: stmt overflow
variable v;
Select v such that Next(45, v)
none
5000
440 - NEXT: stmt underflow
variable v;
Select v such that Next(-1, v)
none
5000
441 - NEXT: invalid type
variable v;
Select v such that Next(2, v)
none
5000
442 - NEXT: invalid type
procedure p;
Select p such that Next(p, 2)
none
5000
443 - NEXT*-boolean: fixed-fixed (regular stmt)

Select BOOLEAN such that Next*(7, 21)
true
5000
444 - NEXT*-stmt: fixed-fixed (while stmt)
stmt s;
Select s such that Next*(9, 15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
445 - NEXT*-boolean: fixed-fixed (loop while stmt)

Select BOOLEAN such that Next*(19, 15)
true
5000
446 - NEXT*-boolean: fixed-fixed (if stmt)

Select BOOLEAN such that Next*(17, 20)
true
5000
447 - NEXT*-boolean: fixed-fixed (if stmt to then block)

Select BOOLEAN such that Next*(20, 22)
true
5000
448 - NEXT*-stmt: fixed-fixed (loop to previously unreachable)
stmt s;
Select s such that Next*(21, 22)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
449 - NEXT*-stmt: syn-syn (tuple)
stmt s1, s2;
Select <s1,s2> such that Next*(s1, s2)
1 2, 1 3, 1 4, 1 5, 1 6, 1 7, 1 8, 1 9, 1 10, 1 11, 1 12, 1 13, 1 14, 1 15, 1 16, 1 17, 1 18, 1 19, 1 20, 1 21, 1 22, 1 23, 2 3, 2 4, 2 5, 2 6, 2 7, 2 8, 2 9, 2 10, 2 11, 2 12, 2 13, 2 14, 2 15, 2 16, 2 17, 2 18, 2 19, 2 20, 2 21, 2 22, 2 23, 3 4, 3 5, 3 6, 3 7, 3 8, 3 9, 3 10, 3 11, 3 12, 3 13, 3 14, 3 15, 3 16, 3 17, 3 18, 3 19, 3 20, 3 21, 3 22, 3 23, 4 5, 4 6, 4 7, 4 8, 4 9, 4 10, 4 11, 4 12, 4 13, 4 14, 4 15, 4 16, 4 17, 4 18, 4 19, 4 20, 4 21, 4 22, 4 23, 5 5, 5 6, 5 7, 5 8, 5 9, 5 10, 5 11, 5 12, 5 13, 5 14, 5 15, 5 16, 5 17, 5 18, 5 19, 5 20, 5 21, 5 22, 5 23, 6 5, 6 6, 6 7, 6 8, 6 9, 6 10, 6 11, 6 12, 6 13, 6 14, 6 15, 6 16, 6 17, 6 18, 6 19, 6 20, 6 21, 6 22, 6 23, 7 5, 7 6, 7 7, 7 8, 7 9, 7 10, 7 11, 7 12, 7 13, 7 14, 7 15, 7 16, 7 17, 7 18, 7 19, 7 20, 7 21, 7 22, 7 23, 8 5, 8 6, 8 7, 8 8, 8 9, 8 10, 8 11, 8 12, 8 13, 8 14, 8 15, 8 16, 8 17, 8 18, 8 19, 8 20, 8 21, 8 22, 8 23, 9 10, 9 11, 9 12, 9 13, 9 14, 9 15, 9 16, 9 17, 9 18, 9 19, 9 20, 9 21, 9 22, 9 23, 10 11, 10 12, 10 13, 10 14, 10 15, 10 16, 10 17, 10 18, 10 19, 10 20, 10 21, 10 22, 10 23, 11 12, 11 13, 11 14, 11 15, 11 16, 11 17, 11 18, 11 19, 11 20, 11 21, 11 22, 11 23, 12 13, 12 14, 12 15, 12 16, 12 17, 12 18, 12 19, 12 20, 12 21, 12 22, 12 23, 13 14, 13 15, 13 16, 13 17, 13 18, 13 19, 13 20, 13 21, 13 22, 13 23, 14 15, 14 16, 14 17, 14 18, 14 19, 14 20, 14 21, 14 22, 14 23, 15 15, 15 16, 15 17, 15 18, 15 19, 15 20, 15 21, 15 22, 15 23, 16 15, 16 16, 16 17, 16 18, 16 19, 16 20, 16 21, 16 22, 16 23, 17 15, 17 16, 17 17, 17 18, 17 19, 17 20, 17 21, 17 22, 17 23, 18 15, 18 16, 18 17, 18 18, 18 19, 18 20, 18 21, 18 22, 18 23, 19 15, 19 16, 19 17, 19 18, 19 19, 19 20, 19 21, 19 22, 19 23, 20 15, 20 16, 20 17, 20 18, 20 19, 20 20, 20 21, 20 22, 20 23, 21 15, 21 16, 21 17, 21 18, 21 19, 21 20, 21 21, 21 22, 21 23, 22 15, 22 16, 22 17, 22 18, 22 19, 22 20, 22 21, 22 22, 22 23, 23 15, 23 16, 23 17, 23 18, 23 19, 23 20, 23 21, 23 22, 23 23
5000
450 - NEXT*-assign: syn-syn
assign a1, a2;
Select a1 such that Next*(a1, a2)
1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
451 - NEXT*-while: syn-syn
while w1, w2;
Select w1 such that Next*(w1, w2)
5, 15, 17, 18
5000
452 - NEXT*-if: syn-syn
if i; stmt s;
Select i such that Next*(i, s)
20
5000
453 - NEXT*-boolean: generic-generic

Select BOOLEAN such that Next*(_, _)
true
5000
454 - NEXT*-stmt: fixed-syn (regular stmt)
stmt s;
Select s such that Next*(12, s)
13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
455 - NEXT*-assign: fixed-syn (while stmt)
assign a;
Select a such that Next*(17, a)
16, 19, 21, 22, 23
5000
456 - NEXT*-while: fixed-syn (if stmt)
while w;
Select w such that Next*(20, w)
15, 17, 18
5000
457 - NEXT*-stmt: syn-fixed
stmt s;
Select s such that Next*(s, 14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
5000
458 - NEXT*-assign: syn-fixed
assign a;
Select a such that Next*(a, 10)
1, 2, 3, 4, 6, 7, 8, 9
5000
459 - NEXT*-while: syn-fixed
while w;
Select w such that Next*(w, 18)
5, 15, 17, 18
5000
460 - NEXT*-if: syn-fixed
if i;
Select i such that Next*(i, 15)
20
5000
461 - NEXT*-boolean: fixed-generic

Select BOOLEAN such that Next*(23, _)
true
5000
462 - NEXT*-boolean: generic-fixed

Select BOOLEAN such that Next*(_, 18)
true
5000
463 - NEXT*-assign: syn-generic
assign a;
Select a such that Next*(a, _)
1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
464 - NEXT*-while: syn-generic
while w;
Select w such that Next*(w, _)
5, 15, 17, 18
5000
465 - NEXT*-if: syn-generic
if i;
Select i such that Next*(i, _)
20
5000
466 - NEXT*-stmt: generic-syn
stmt s;
Select s such that Next*(_, s)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
467 - NEXT*-while: generic-syn
while w;
Select w such that Next*(_, w)
5, 15, 17, 18
5000
468 - NEXT*-if: generic-syn
if i;
Select i such that Next*(_, i)
20
5000
469 - NEXT*-assign: pattern-right defined (match select)
assign a; while w;
Select a such that Next*(a, w) pattern a(_, _"1"_)
6, 7, 8, 22
5000
470 - NEXT*-while: pattern-right defined (does not match select)
while w; assign a;
Select w such that Next*(w, a) pattern a(_, _"ivysaur"_)
5, 15, 17, 18
5000
471 - NEXT*-while: pattern-left defined (match select)
while w;
Select w such that Next*(_, w) pattern w("battle1", _)
15
5000
472 - NEXT*-stmt: pattern-left defined (does not match select)
stmt s; assign a;
Select s such that Next*(s, _) pattern a("charmander", _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
473 - NEXT*-assign: pattern-left defined synonym
assign a; variable v;
Select a such that Next*(_, a) pattern a(v, _)
2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
474 - NEXT*-assign: pattern-both defined (match select)
assign a; while w;
Select a such that Next*(a, w) pattern a("battle3", "squirtle - ivysaur")
14
5000
475 - NEXT*-while: pattern-both defined (match does not select)
while w; assign a;
Select w such that Next*(_, w) pattern a("wartortle", "wartortle - 1")
5, 15, 17, 18
5000
476 - NEXT*-while: pattern-both defined, left synonym
while w; variable v;
Select w such that Next*(w, _) pattern w(v, _)
5, 15, 17, 18
5000
477 - NEXT*-if: pattern (match select)
if i;
Select i such that Next*(i, _) pattern i("wartortle", _, _)
20
5000
478 - NEXT*-if: pattern (does not match select)
if i; assign a;
Select i such that Next*(i, a) pattern a(_, "squirtle+3")
20
5000
479 - NEXT*-if: pattern, left synonym
if i; variable v;
Select i such that Next*(_, i) pattern i(v, _, _)
20
5000
480 - NEXT*: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Next*(1, 5) and Next*(7, 15)
true
5000
481 - NEXT*: 2 clauses (similar) - syn-syn, syn-syn
stmt s; while w;
Select <s,w> such that Next*(s, w) and Next*(w, s)
5 5, 6 5, 7 5, 8 5, 15 15, 15 17, 15 18, 16 15, 16 17, 16 18, 17 15, 17 17, 17 18, 18 18, 18 15, 18 17, 19 15, 19 17, 19 18, 20 15, 20 17, 20 18, 21 15, 21 17, 21 18, 22 15, 22 17, 22 18, 23 15, 23 17, 23 18
5000
482 - NEXT*: 2 clauses (similar) - fixed-syn, fixed-syn
stmt s;
Select s such that Next*(14, s) and Next*(23, s)
15, 16, 17, 18, 19, 20, 21, 22, 23
5000
483 - NEXT*: 2 clauses (similar) - syn-fixed, syn-fixed
assign a; while w;
Select a such that Next*(a, 17) and Next* (w, 13)
1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
484 - NEXT*: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Next*(23, _) and Next*(22, _)
true
5000
485 - NEXT*: 2 clauses (similar) - generic-fixed, generic-fixed
stmt s; while w;
Select s such that Next*(_, s) and Next*(_, w)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
486 - NEXT*: 2 clauses (similar) - syn-generic, syn-generic
assign a; if i;
Select i such that Next*(a, _) and Next*(i, _)
20
5000
487 - NEXT*: 2 clauses (similar) - generic-syn, generic-syn
assign a; while w;
Select w such that Next*(_, a) and Next*(_, w)
5, 15, 17, 18
5000
488 - NEXT*: 2 clauses (mixed) - fixed-fixed, fixed-syn
stmt s;
Select s such that Next*(22, 17) and Next*(16, s)
15, 16, 17, 18, 19, 20, 21, 22, 23
5000
489 - NEXT*: 2 clauses (mixed) - syn-syn, syn-fixed
assign a; if i;
Select a such that Next*(i, a) and Next*(a, 14)
none
5000
490 - NEXT*: 2 clauses (mixed) - generic-generic, fixed-generic

Select BOOLEAN such that Next*(_, _) and Next*(23, _)
true
5000
491 - NEXT*: 2 clauses (mixed) - fixed-syn, generic-fixed
while w;
Select w such that Next*(17, w) and Next*(_, w)
15, 17, 18
5000
492 - NEXT*: 2 clauses (mixed) - syn-fixed, syn-generic
stmt s;
Select s such that Next*(s, 22) and Next*(s, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
493 - NEXT*: 2 clauses (mixed) - fixed-generic, generic-syn
assign a;
Select a such that Next*(5, _) and Next*(_, a)
2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
494 - NEXT*: 2 clauses (mixed) - generic-fixed, syn-generic
while w;
Select w such that Next*(_, 21) and Next*(w, _)
5, 15, 17, 18
5000
495 - NEXT*: 2 clauses (mixed) - syn-generic, generic-syn
assign a; while w;
Select <a,w> such that Next*(w, _) and Next*(_, a)
2 5, 2 15, 2 17, 2 18, 3 5, 3 15, 3 17, 3 18, 4 5, 4 15, 4 17, 4 18, 6 5, 6 15, 6 17, 6 18, 7 5, 7 15, 7 17, 7 18, 8 5, 8 15, 8 17, 8 18, 9 5, 9 15, 9 17, 9 18, 10 5, 10 15, 10 17, 10 18, 11 5, 11 15, 11 17, 11 18, 12 5, 12 15, 12 17, 12 18, 13 5, 13 15, 13 17, 13 18, 14 5, 14 15, 14 17, 14 18, 16 5, 16 15, 16 17, 16 18, 19 5, 19 15, 19 17, 19 18, 21 5, 21 15, 21 17, 21 18, 22 5, 22 15, 22 17, 22 18, 23 5, 23 15, 23 17, 23 18
5000
496 - NEXT*: 2 clauses (mixed) - generic-fixed, generic-syn
stmt s;
Select  such that Next*(_, 1) and Next*(_, s)
none
5000
497 - NEXT*: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Next*(a, _)
1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
498 - NEXT*: stmt# - select clause (no results)
if i; assign a;
Select i.stmt# such that Next*(a, i)
20
5000
499 - NEXT*: stmt# - with clause (has results)
while w;
Select w such that Next*(w, _) with w.stmt# = 17
17
5000
500 - NEXT*: stmt# - with clause (no results)
if i;
Select i such that Next*(i, _) with i.stmt# = 5
none
5000
501 - NEXT*: prog_line
prog_line n; if i;
Select n such that Next*(n, i)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
502 - NEXT*: stmt overflow
variable v;
Select v such that Next*(45, v)
none
5000
503 - NEXT*: stmt underflow
variable v;
Select v such that Next*(-1, v)
none
5000
504 - NEXT*: invalid type
variable v;
Select v such that Next*(2, v)
none
5000
505 - NEXT*: invalid type
procedure p;
Select p such that Next*(p, 2)
none
5000
506 - AFFECTS-boolean: fixed-fixed

Select BOOLEAN such that Affects(1, 6)
true
5000
507 - AFFECTS-stmt: fixed-fixed (non-assign stmt)
stmt s;
Select s such that Affects(5, 18)
none
5000
508 - AFFECTS-boolean: fixed-fixed (indirect affects)

Select BOOLEAN such that Affects(9, 19)
false
5000
509 - AFFECTS-boolean: fixed-fixed (false)

Select BOOLEAN such that Affects(2, 4)
false
5000
510 - AFFECTS-assign: syn-syn (tuple)
assign a1, a2;
Select <a1,a2> such that Affects(a1, a2)
1 6, 1 9, 2 8, 2 10, 2 14, 2 21, 3 7, 3 11, 6 6, 6 9, 7 7, 7 11, 8 8, 8 10, 8 14, 8 21, 9 12, 9 13, 10 12, 10 16, 10 19, 10 22, 11 13, 11 14, 11 16, 16 19, 19 16, 21 16, 21 19, 21 22, 22 16, 22 19, 22 22
5000
511 - AFFECTS-assign: syn-syn (non-assign stmt)
while w; assign a;
Select a such that Affects(w, a)
none
5000
512 - AFFECTS-stmt: syn-syn (regular stmt)
stmt s1, s2;
Select s1 such that Affects(s1, s2)
1, 2, 3, 6, 7, 8, 9, 10, 11, 16, 19, 21, 22
5000
513 - AFFECTS-prog_line: syn-syn (prog_line)
prog_line n1, n2;
Select n2 such that Affects(n1, n2)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
514 - AFFECTS-boolean: generic-generic

Select BOOLEAN such that Affects(_, _)
true
5000
515 - AFFECTS-assign: fixed-syn
assign a;
Select a such that Affects(6, a)
6, 9
5000
516 - AFFECTS-stmt: fixed-syn (regular stmt)
stmt s;
Select s such that Affects(1, s)
6, 9
5000
517 - AFFECTS-prog_line: fixed-syn (prog_line)
prog_line n;
Select n such that Affects(16, n)
19
5000
518 - AFFECTS-boolean: fixed-syn (non-assign stmt)
if i;
Select BOOLEAN such that Affects(19, i)
false
5000
519 - AFFECTS-assign: syn-fixed
assign a;
Select a such that Affects(a, 14)
2, 8, 11
5000
520 - AFFECTS-stmt: syn-fixed (regular stmt)
stmt s;
Select s such that Affects(s, 12)
9, 10
5000
521 - AFFECTS-prog_line: syn-fixed (prog_line)
prog_line n;
Select n such that Affects(n, 19)
10, 16, 21, 22
5000
522 - AFFECTS-boolean: syn-fixed (non-assign stmt)
while w;
Select BOOLEAN such that Affects(w, 5)
false
5000
523 - AFFECTS-boolean: fixed-generic (assign)

Select BOOLEAN such that Affects(22, _)
true
5000
524 - AFFECTS-boolean: fixed-generic (non-assign stmt)

Select BOOLEAN such that Affects(17, _)
false
5000
525 - AFFECTS-boolean: fixed-generic (false)

Select BOOLEAN such that Affects(23, _)
false
5000
526 - AFFECTS-boolean: generic-fixed (assign)

Select BOOLEAN such that Affects(_, 6)
true
5000
527 - AFFECTS-boolean: generic-fixed (non-assign stmt)

Select BOOLEAN such that Affects(_, 15)
false
5000
528 - AFFECTS-boolean: generic-fixed (false)

Select BOOLEAN such that Affects(_, 4)
false
5000
529 - AFFECTS-assign: syn-generic
assign a;
Select a such that Affects(a, _)
1, 2, 3, 6, 7, 8, 9, 10, 11, 16, 19, 21, 22
5000
530 - AFFECTS-stmt: syn-generic
stmt s;
Select s such that Affects(s, _)
1, 2, 3, 6, 7, 8, 9, 10, 11, 16, 19, 21, 22
5000
531 - AFFECTS-while: syn-generic
while w;
Select w such that Affects(w, _)
none
5000
532 - AFFECTS-if: syn-generic
if i;
Select i such that Affects(i, _)
none
5000
533 - AFFECTS-assign: generic-syn
assign a;
Select a such that Affects(_, a)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
534 - AFFECTS-stmt: generic-syn
stmt s;
Select s such that Affects(_, s)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
535 - AFFECTS-while: generic-syn
while w;
Select w such that Affects(_, w)
none
5000
536 - AFFECTS-if: generic-syn
if i;
Select i such that Affects(_, i)
none
5000
537 - AFFECTS-assign: pattern-right defined (match select)
assign a;
Select a such that Affects(a, _) pattern a(_, _"charmeleon"_)
19
5000
538 - AFFECTS-assign: pattern-right defined (does not match select)
assign a1, a2;
Select a1 such that Affects(_, a1) pattern a2(_, _"charmeleon"_)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
539 - AFFECTS-assign: pattern-left defined (match select)
assign a;
Select a such that Affects(a, _) pattern a("ivysaur", _)
11, 19
5000
540 - AFFECTS-assign: pattern-left defined (does not match select)
assign a1, a2;
Select a1 such that Affects(_, a1) pattern a2("lastPokemon", _)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
541 - AFFECTS-assign: pattern-left defined synonym
assign a; variable v;
Select a such that Affects(a, _) pattern a(v, _)
1, 2, 3, 6, 7, 8, 9, 10, 11, 16, 19, 21, 22
5000
542 - AFFECTS-assign: patter-both defined (match select)
assign a;
Select a such that Affects(a, _) pattern a("ivysaur", _"bulbasaur"_)
11
5000
543 - AFFECTS-assign: patter-both defined (does not match select)
assign a1, a2;
Select a1 such that Affects(_, a1) pattern a2("wartortle", _"wartortle"_)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
544 - AFFECTS-assign: pattern-both defined, left synonym
assign a; variable v;
Select a such that Affects(a, _) pattern a(v, "5")
1, 2, 3
5000
545 - AFFECTS: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Affects(1, 6) and Affects(2, 8)
true
5000
546 - AFFECTS: 2 clauses (similar) - syn-syn, syn-syn
assign a1, a2, a3;
Select <a1,a3> such that Affects(a1, a2) and Affects(a2, a3)
1 6, 1 9, 1 12, 1 13, 2 8, 2 10, 2 14, 2 21, 2 12, 2 16, 2 19, 2 22, 3 7, 3 11, 3 13, 3 14, 3 16, 6 9, 6 6, 6 12, 6 13, 7 7, 7 11, 7 13, 7 14, 7 16, 8 8, 8 10, 8 14, 8 12, 8 16, 8 19, 8 21, 8 22, 10 19, 10 16, 10 22, 11 19, 16 16, 19 19, 21 19, 21 16, 21 22, 22 19, 22 16, 22 22
5000
547 - AFFECTS: 2 clauses (similar) - fixed-syn, fixed-syn
stmt s;
Select s such that Affects(2, s) and Affects(11, s)
14
5000
548 - AFFECTS: 2 clauses (similar) - syn-fixed, syn-fixed
assign a1, a2;
Select BOOLEAN such that Affects(a1, 16) and Affects(a2, 14)
true
5000
549 - AFFECTS: 2 clauses (similar) - fixed-generic, fixed-generic
while w;
Select w such that Affects(19, _) and Affects(22, _)
5, 15, 17, 18
5000
550 - AFFECTS: 2 clauses (similar) - generic-fixed, generic-fixed
if i;
Select i such that Affects(_, 14) and Affects(_, 23)
none
5000
551 - AFFECTS: 2 clauses (similar) - syn-generic, syn-generic
assign a; stmt s;
Select a such that Affects(a, _) and Affects(s, _)
1, 2, 3, 6, 7, 8, 9, 10, 11, 16, 19, 21, 22
5000
552 - AFFECTS: 2 clauses (similar) - generic-syn, generic-syn
assign a; stmt s;
Select s such that Affects(_, s) and Affects(_, a)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
553 - AFFECTS: 2 clauses (mixed) - fixed-fixed, fixed-syn
assign a;
Select a such that Affects(16, 19) and Affects(19, a)
16
5000
554 - AFFECTS: 2 clauses (mixed) - syn-syn, syn-fixed
assign a1, a2;
Select a1 such that Affects(a1, a2) and Affects(a1, 13)
9, 11
5000
555 - AFFECTS: 2 clauses (mixed) - generic-generic, fixed-generic

Select BOOLEAN such that Affects(_, _) and Affects(21, _)
true
5000
556 - AFFECTS: 2 clauses (mixed) - fixed-syn, generic-fixed
assign a;
Select a such that Affects(5, a) and Affects(_, 23)
none
5000
557 - AFFECTS: 2 clauses (mixed) - syn-fixed, syn-generic
stmt s1, s2;
Select BOOLEAN such that Affects(s1, 11) and Affects(s2, _)
true
5000
558 - AFFECTS: 2 clauses (mixed) - fixed-generic, generic-syn
assign a; while w;
Select w such that Affects(21, _) and Affects(_, a)
5, 15, 17, 18
5000
559 - AFFECTS: 2 clauses (mixed) - generic-fixed, syn-generic
assign a; stmt s;
Select s such that Affects(_, 16) and Affects(a, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
560 - AFFECTS: 2 clauses (mixed) - syn-generic, generic-syn
assign a;
Select a such that Affects(a, _) and Affects(_, a)
6, 7, 8, 9, 10, 11, 16, 19, 21, 22
5000
561 - AFFECTS: 2 clauses (mixed) - generic-fixed, generic-syn
assign a;
Select BOOLEAN such that Affects(_, 4) and Affects(_, a)
false
5000
562 - AFFECTS: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Affects(a, 8)
2, 8
5000
563 - AFFECTS: stmt# - select clause (no results)
assign a;
Select a.stmt# such that Affects(a, 4)
none
5000
564 - AFFECTS: stmt# - with clause (has results)
stmt s;
Select s such that Affects(s, 14) with s.stmt# = 2
2
5000
565 - AFFECTS: stmt# - with clause (no results)
stmt s;
Select s such that Affects(s, 14) with s.stmt# = 1
none
5000
566 - AFFECTS: stmt overflow
assign a;
Select a such that Affects(45, a)
none
5000
567 - AFFECTS: stmt underflow
assign a;
Select a such that Affects(-1, a)
none
5000
568 - AFFECTS: stmt underflow
assign a;
Select v such that Affects(0, a)
none
5000
569 - AFFECTS: invalid argument
assign a; variable v;
Select a such that Affects(a, v)
none
5000
570 - AFFECTS*-boolean: fixed-fixed

Select BOOLEAN such that Affects*(1, 13)
true
5000
571 - AFFECTS*-stmt: fixed-fixed (non-assign stmt)
stmt s;
Select s such that Affects*(5, 18)
none
5000
572 - AFFECTS*-boolean: fixed-fixed (indirect affects)

Select BOOLEAN such that Affects*(9, 19)
false
5000
573 - AFFECTS*-boolean: fixed-fixed (false)

Select BOOLEAN such that Affects*(2, 4)
false
5000
574 - AFFECTS*-assign: syn-syn (tuple)
assign a1, a2;
Select <a1,a2> such that Affects*(a1, a2)
1 6, 1 9, 1 12, 1 13, 2 8, 2 10, 2 12, 2 14, 2 16, 2 19, 2 21, 2 22, 3 7, 3 11, 3 13, 3 14, 3 16, 3 19, 6 6, 6 9, 6 12, 6 13, 7 7, 7 11, 7 13, 7 14, 7 16, 7 19, 8 8, 8 10, 8 12, 8 14, 8 16, 8 19, 8 21, 8 22, 9 12, 9 13, 10 12, 10 16, 10 19, 10 22, 11 13, 11 14, 11 16, 11 19, 16 16, 16 19, 19 16, 19 19, 21 16, 21 19, 21 22, 22 16, 22 19, 22 22
5000
575 - AFFECTS*-assign: syn-syn (non-assign stmt)
while w; assign a;
Select a such that Affects*(w, a)
none
5000
576 - AFFECTS*-stmt: syn-syn (regular stmt)
stmt s1, s2;
Select s1 such that Affects*(s1, s2)
1, 2, 3, 6, 7, 8, 9, 10, 11, 16, 19, 21, 22
5000
577 - AFFECTS*-prog_line: syn-syn (prog_line)
prog_line n1, n2;
Select n2 such that Affects*(n1, n2)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
578 - AFFECTS*-boolean: generic-generic

Select BOOLEAN such that Affects*(_, _)
true
5000
579 - AFFECTS*-assign: fixed-syn
assign a;
Select a such that Affects*(6, a)
6, 9, 12, 13
5000
580 - AFFECTS*-stmt: fixed-syn (regular stmt)
stmt s;
Select s such that Affects*(1, s)
6, 9, 12, 13
5000
581 - AFFECTS*-prog_line: fixed-syn (prog_line)
prog_line n;
Select n such that Affects*(16, n)
16, 19
5000
582 - AFFECTS*-boolean: fixed-syn (non-assign stmt)
if i;
Select BOOLEAN such that Affects*(19, i)
false
5000
583 - AFFECTS*-assign: syn-fixed
assign a;
Select a such that Affects*(a, 14)
2, 3, 7, 8, 11
5000
584 - AFFECTS*-stmt: syn-fixed (regular stmt)
stmt s;
Select s such that Affects*(s, 12)
1, 2, 6, 8, 9, 10
5000
585 - AFFECTS*-prog_line: syn-fixed (prog_line)
prog_line n;
Select n such that Affects*(n, 19)
2, 3, 7, 8, 10, 11, 16, 19, 21, 22
5000
586 - AFFECTS*-boolean: syn-fixed (non-assign stmt)
while w;
Select BOOLEAN such that Affects*(w, 5)
false
5000
587 - AFFECTS*-boolean: fixed-generic (assign)

Select BOOLEAN such that Affects*(22, _)
true
5000
588 - AFFECTS*-boolean: fixed-generic (non-assign stmt)

Select BOOLEAN such that Affects*(17, _)
false
5000
589 - AFFECTS*-boolean: fixed-generic (false)

Select BOOLEAN such that Affects*(23, _)
false
5000
590 - AFFECTS*-boolean: generic-fixed (assign)

Select BOOLEAN such that Affects*(_, 6)
true
5000
591 - AFFECTS*-boolean: generic-fixed (non-assign stmt)

Select BOOLEAN such that Affects*(_, 15)
false
5000
592 - AFFECTS*-boolean: generic-fixed (false)

Select BOOLEAN such that Affects*(_, 4)
false
5000
593 - AFFECTS*-assign: syn-generic
assign a;
Select a such that Affects*(a, _)
1, 2, 3, 6, 7, 8, 9, 10, 11, 16, 19, 21, 22
5000
594 - AFFECTS*-stmt: syn-generic
stmt s;
Select s such that Affects*(s, _)
1, 2, 3, 6, 7, 8, 9, 10, 11, 16, 19, 21, 22
5000
595 - AFFECTS*-while: syn-generic
while w;
Select w such that Affects*(w, _)
none
5000
596 - AFFECTS*-if: syn-generic
if i;
Select i such that Affects*(i, _)
none
5000
597 - AFFECTS*-assign: generic-syn
assign a;
Select a such that Affects*(_, a)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
598 - AFFECTS*-stmt: generic-syn
stmt s;
Select s such that Affects*(_, s)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
599 - AFFECTS*-while: generic-syn
while w;
Select w such that Affects*(_, w)
none
5000
600 - AFFECTS*-if: generic-syn
if i;
Select i such that Affects*(_, i)
none
5000
601 - AFFECTS*-assign: pattern-right defined (match select)
assign a;
Select a such that Affects*(a, _) pattern a(_, _"charmeleon"_)
19
5000
602 - AFFECTS*-assign: pattern-right defined (does not match select)
assign a1, a2;
Select a1 such that Affects*(_, a1) pattern a2(_, _"charmeleon"_)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
603 - AFFECTS*-assign: pattern-left defined (match select)
assign a;
Select a such that Affects*(a, _) pattern a("ivysaur", _)
11, 19
5000
604 - AFFECTS*-assign: pattern-left defined (does not match select)
assign a1, a2;
Select a1 such that Affects*(_, a1) pattern a2("lastPokemon", _)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
605 - AFFECTS*-assign: pattern-left defined synonym
assign a; variable v;
Select a such that Affects*(a, _) pattern a(v, _)
1, 2, 3, 6, 7, 8, 9, 10, 11, 16, 19, 21, 22
5000
606 - AFFECTS*-assign: patter-both defined (match select)
assign a;
Select a such that Affects*(a, _) pattern a("ivysaur", _"bulbasaur"_)
11
5000
607 - AFFECTS*-assign: patter-both defined (does not match select)
assign a1, a2;
Select a1 such that Affects*(_, a1) pattern a2("wartortle", _"wartortle"_)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
608 - AFFECTS*-assign: pattern-both defined, left synonym
assign a; variable v;
Select a such that Affects*(a, _) pattern a(v, "5")
1, 2, 3
5000
609 - AFFECTS*: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Affects*(1, 13) and Affects*(2, 22)
true
5000
610 - AFFECTS*: 2 clauses (similar) - syn-syn, syn-syn
assign a1, a2, a3;
Select <a1,a3> such that Affects*(a1, a2) and Affects*(a2, a3)
1 6, 1 9, 1 12, 1 13, 2 8, 2 10, 2 14, 2 21, 2 12, 2 16, 2 19, 2 22, 3 7, 3 11, 3 13, 3 14, 3 16, 3 19, 6 9, 6 6, 6 12, 6 13, 7 7, 7 11, 7 13, 7 14, 7 16, 7 19, 8 8, 8 10, 8 14, 8 12, 8 16, 8 19, 8 21, 8 22, 10 19, 10 16, 10 22, 11 16, 11 19, 16 16, 16 19, 19 16, 19 19, 21 19, 21 16, 21 22, 22 19, 22 16, 22 22
5000
611 - AFFECTS*: 2 clauses (similar) - fixed-syn, fixed-syn
stmt s;
Select s such that Affects*(2, s) and Affects*(11, s)
14, 16, 19
5000
612 - AFFECTS*: 2 clauses (similar) - syn-fixed, syn-fixed
assign a1, a2;
Select BOOLEAN such that Affects*(a1, 16) and Affects*(a2, 14)
true
5000
613 - AFFECTS*: 2 clauses (similar) - fixed-generic, fixed-generic
while w;
Select w such that Affects*(19, _) and Affects*(22, _)
5, 15, 17, 18
5000
614 - AFFECTS*: 2 clauses (similar) - generic-fixed, generic-fixed
if i;
Selectt i such that Affects*(_, 14) and Affects*(_, 23)
none
5000
615 - AFFECTS*: 2 clauses (similar) - syn-generic, syn-generic
assign a; stmt s;
Select a such that Affects*(a, _) and Affects*(s, _)
1, 2, 3, 6, 7, 8, 9, 10, 11, 16, 19, 21, 22
5000
616 - AFFECTS*: 2 clauses (similar) - generic-syn, generic-syn
assign a; stmt s;
Select s such that Affects*(_, s) and Affects*(_, a)
6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22
5000
617 - AFFECTS*: 2 clauses (mixed) - fixed-fixed, fixed-syn
assign a;
Select a such that Affects*(16, 19) and Affects*(19, a)
16, 19
5000
618 - AFFECTS*: 2 clauses (mixed) - syn-syn, syn-fixed
assign a1, a2;
Select a1 such that Affects*(a1, a2) and Affects*(a1, 13)
1, 3, 6, 7, 9, 11
5000
619 - AFFECTS*: 2 clauses (mixed) - generic-generic, fixed-generic

Select BOOLEAN such that Affects*(_, _) and Affects*(21, _)
true
5000
620 - AFFECTS*: 2 clauses (mixed) - fixed-syn, generic-fixed
assign a;
Select a such that Affects*(5, a) and Affects*(_, 23)
none
5000
621 - AFFECTS*: 2 clauses (mixed) - syn-fixed, syn-generic
stmt s1, s2;
Select BOOLEAN such that Affects*(s1, 11) and Affects*(s2, _)
true
5000
622 - AFFECTS*: 2 clauses (mixed) - fixed-generic, generic-syn
assign a; while w;
Select w such that Affects*(21, _) and Affects*(_, a)
5, 15, 17, 18
5000
623 - AFFECTS*: 2 clauses (mixed) - generic-fixed, syn-generic
assign a; stmt s;
Select s such that Affects*(_, 16) and Affects*(a, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
624 - AFFECTS*: 2 clauses (mixed) - syn-generic, generic-syn
assign a;
Select a such that Affects*(a, _) and Affects*(_, a)
6, 7, 8, 9, 10, 11, 16, 19, 21, 22
5000
625 - AFFECTS*: 2 clauses (mixed) - generic-fixed, generic-syn
assign a;
Select BOOLEAN such that Affects*(_, 4) and Affects*(_, a)
false
5000
626 - AFFECTS*: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Affects*(a, 8)
2, 8
5000
627 - AFFECTS*: stmt# - select clause (no results)
assign a;
Select a.stmt# such that Affects*(a, 4)
none
5000
628 - AFFECTS*: stmt# - with clause (has results)
stmt s;
Select s such that Affects*(s, 14) with s.stmt# = 2
2
5000
629 - AFFECTS*: stmt# - with clause (no results)
stmt s;
Select s such that Affects*(s, 14) with s.stmt# = 1
none
5000
630 - AFFECTS*: stmt overflow
assign a;
Select a such that Affects*(45, a)
none
5000
631 - AFFECTS*: stmt underflow
assign a;
Select a such that Affects*(-1, a)
none
5000
632 - AFFECTS*: stmt underflow
assign a;
Select v such that Affects*(0, a)
none
5000
633 - AFFECTS*: invalid argument
assign a; variable v;
Select a such that Affects*(a, v)
none
5000
634 - PATTERN-assign: left-defined only, fixed
assign a;
Select a pattern a("charmeleon", _)
9, 16
5000
635 - PATTERN-assign: left-defined only, fixed (no result)
assign a;
Select a pattern a("pokemonMaster", _)
none
5000
636 - PATTERN-while: left-defined only, fixed
while w;
Select w pattern w("battle1", _)
15
5000
637 - PATTERN-while: left-defined only, fixed (no result)
while w;
Select w pattern w("battle4", _)
none
5000
638 - PATTERN-if: left-defined only, fixed
if i;
Select i pattern i("wartortle", _, _)
20
5000
639 - PATTERN-if: left-defined only, fixed (no results)
if i;
Select i pattern i("squirtle", _, _)
none
5000
640 - PATTERN-assign: left-defined only, synonym
assign a; variable v;
Select a pattern a(v, _)
1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
641 - PATTERN-assign: left-defined only, synonym (with clause constraint)
assign a; variable v;
Select a pattern a(v, _) with v.varName = "wartortle"
10, 21, 22
5000
642 - PATTERN-assign: left-defined only, synonym (no results)
assign a; variable v;
Select a pattern a(v, _) with v.varName = "hohoho"
none
5000
643 - PATTERN-while: left-defined only, synonym
while w; variable v;
Select w pattern w(v, _)
5, 15, 17, 18
5000
644 - PATTERN-while: left-defined only, synonym (with clause constraint)
while w; variable v;
Select w pattern w(v, _) with v.varName = "battle3"
18
5000
645 - PATTERN-while: left-defined only, synonym (no result)
while w; variable v;
Select w pattern w(v, _) with v.varName = "battle5"
none
5000
646 - PATTERN-if: left-defined only, synonym
if i; variable v;
Select i pattern i(v, _, _)
20
5000
647 - PATTERN-if: left-defined only, synonym (with clause constraint)
if i; variable v;
Select i pattern i(v, _, _) with v.varName = "wartortle"
20
5000
648 - PATTERN-if: left-defined only, synonym (no result)
if i; variable v;
Select i pattern i(v, _, _) with v.varName = "charmander"
none
5000
649 - PATTERN-assign: right-defined only, fixed
assign a;
Select a pattern a(_, "5")
1, 2, 3
5000
650 - PATTERN-assign: right-defined only, fixed (no result)
assign a;
Select a pattern a(_, "pokemonMaster")
none
5000
651 - PATTERN-assign: right-defined only, sub
assign a;
Select a pattern a(_, _"charmeleon"_)
12, 13, 19
5000
652 - PATTERN-assign: right-defined only, sub (no result)
assign a;
Select a pattern a(_, _"pokemonMaster"_)
none
5000
653 - PATTERN-assign: both-defined, fixed-fixed
assign a;
Select a pattern a("battle3", "squirtle-ivysaur")
14
5000
654 - PATTERN-assign: both-defined, fixed-fixed (no result)
assign a;
Select a pattern a("squirtle", "11")
none
5000
655 - PATTERN-assign: both-defined, fixed-sub
assign a;
Select a pattern a("ivysaur", _"charmeleon"_)
19
5000
656 - PATTERN-assign: both-defined, fixed-sub (no result)
assign a;
Select a pattern a("squirtle", _"blastoise"_)
none
5000
657 - PATTERN-assign: both-defined, synonym-fixed
assign a; variable v;
Select a pattern a(v, "charmander + 1")
6
5000
658 - PATTERN-assign: both-defined, synonym-fixed (with clause constraint)
assign a; variable v;
Select a pattern a(v, "5") with v.varName = "charmander"
1
5000
659 - PATTERN-assign: both-defined, synonym-fixed (no result)
assign a; variable v;
Select a pattern a(v, "5") with v.varName = "firstStageEvolution"
none
5000
660 - PATTERN-assign: both-defined, synonym-sub
assign a; variable v;
Select a pattern a(v, _"squirtle"_)
8, 10, 14, 21
5000
661 - PATTERN-assign: both-defined, synonym-sub (with clause constraint)
assign a; variable v;
Select a pattern a(v, _"squirtle"_) with v.varName = "squirtle"
8
5000
662 - PATTERN-assign: both-defined, synonym-sub (no result)
assign a; variable v;
Select a pattern a(v, _"squirtle"_) with v.varName = "lastPokemon"
none
5000
663 - PATTERN-assign: pattern mismatch
assign a;
Select a pattern a("charmander", _, _)
none
5000
664 - PATTERN-while: pattern mismatch
while w;
Select w pattern w("battle2", _, _)
none
5000
665 - PATTERN-if: pattern mismatch
if i;
Select i pattern i("wartortle", _)
none
5000
666 - WITH: prog_line = constant
prog_line n;
Select n with n = 15
15
5000
667 - WITH: prog_line = constant (underflow)
prog_line n;
Select n with n = 0
none
5000
668 - WITH: prog_line = constant (overflow)
prog_line n;
Select n with n = 45
none
5000
669 - WITH: constant = prog_line
prog_line n;
Select n with 5 = n
5
5000
670 - WITH: constant = prog_line (underflow)
prog_line n;
Select n with 0 = n
none
5000
671 - WITH: constant = prog_line (overflow)
prog_line n;
Select n with 45 = n
none
5000
672 - WITH-stmt: stmt# = constant
stmt s;
Select s with s.stmt# = 8
8
5000
673 - WITH-stmt: stmt# = constant (no result)
stmt s;
Select s with s.stmt# = 50
none
5000
674 - WITH-assign: stmt# = constant
assign a;
Select a with a.stmt# = 16
16
5000
675 - WITH-assign: stmt# = constant (no result)
assign a;
Select a with a.stmt# = 18
none
5000
676 - WITH-while: stmt# = constant
while w;
Select w with w.stmt# = 17
17
5000
677 - WITH-while: stmt# = constant (no result)
while w;
Select w with w.stmt# = 4
none
5000
678 - WITH-if: stmt# = constant
if i;
Select i with i.stmt# = 20
20
5000
679 - WITH-if: stmt# = constant (no result)
if i;
Select i with i.stmt# = 2
none
5000
680 - WITH-call: stmt# = constant (no result)
call c;
Select c with c.stmt# = 16
none
5000
681 - WITH-stmt: constant = stmt#
stmt s;
Select s with 23 = s.stmt#
23
5000
682 - WITH-stmt: constant = stmt# (no result)
stmt s;
Select s with 48 = s.stmt#
none
5000
683 - WITH-assign: constant = stmt#
assign a;
Select a with 19 = a.stmt#
19
5000
684 - WITH-assign: constant = stmt# (no result)
assign a;
Select a with 5 = a.stmt#
none
5000
685 - WITH-while: constant = stmt#
while w;
Select w with 18 = w.stmt#
18
5000
686 - WITH-while: constant = stmt# (no result)
while w;
Select w with 19 = w.stmt#
none
5000
687 - WITH-if: constant = i.stmt#
if i;
Select i with 20 = i.stmt#
20
5000
688 - WITH-if: constant = stmt# (no result)
if i;
Select i with 21 = i.stmt#
none
5000
689 - WITH-call: constant = stmt# (no result)
call c;
Select c with 20 = c.stmt#
none
5000
690 - WITH-stmt: stmt# = prog_line
stmt s; prog_line n;
Select s with s.stmt# = n
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
691 - WITH-assign: stmt# = prog_line
assign a; prog_line n;
Select a with a.stmt# = n
1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23
5000
692 - WITH-while: stmt# = prog_line
while w; prog_line n;
Select w with w.stmt# = n
5, 15, 17, 18
5000
693 - WITH-if: stmt# = prog_line
if i; prog_line n;
Select i with i.stmt# = n
20
5000
694 - WITH: value = constant
constant c;
Select c with c.value = 5
5
5000
695 - WITH: value = constant (no result)
constant c;
Select c with c.value = 6
none
5000
696 - WITH: constant = value
constant c;
Select c with 1 = c.value
1
5000
697 - WITH: constant = value (no result)
constant c;
Select c with 7 = c.value
none
5000
698 - WITH: prog_line = value
prog_line n; constant c;
Select n with n = c.value
1, 3, 5, 11
5000
699 - WITH: value = prog_line
constant c; prog_line n;
Select c with c.value = n
1, 3, 5, 11
5000
700 - WITH: procName = string
procedure p;
Select p with p.procName = "pokemon"
pokemon
5000
701 - WITH: procName = string (no result)
procedure p;
Select p with p.procName = "digimon"
none
5000
702 - WITH: string = procName
procedure p;
Select p with "pokemon" = p.procName
pokemon
5000
703 - WITH: string = procName
procedure p;
Select p with "digimon" = p.procName
none
5000
704 - WITH: varName = string
variable v;
Select v with v.varName = "lastPokemon"
lastPokemon
5000
705 - WITH: varName = string (no result)
variable v;
Select v with v.varName = "firstPokemon"
none
5000
706 - WITH: string = varName
variable v;
Select v with "ivysaur" = v.varName
ivysaur
5000
707 - WITH: string = varName (no result)
variable v;
Select v with "pokemon" = v.varName
none
5000
708 - WITH: call.procName = string (no result)
call c;
Select c with c.procName = "pokemon"
none
5000
709 - WITH: string = call.procName (no result)
call c;
Select c with "pokemon" = c.procName
none
5000
710 - WITH: p.procName = c.procName (no result)
procedure p; call c;
Select p with p.procName = c.procName
none
5000
711 - WITH: c.procName = p.procName (no result)
call c; procedure p;
Select c with c.procName = p.procName
none
5000
712 - WITH-stmt: stmt# = value
stmt s; constant c;
Select s with s.stmt# = c.value
1, 3, 5, 11
5000
713 - WITH-assign: stmt# = value
assign a; constant c;
Select a with a.stmt# = c.value
1, 3, 11
5000
714 - WITH-while: stmt# = value
while w; constant c;
Select w with w.stmt# = c.value
5
5000
715 - WITH-if: stmt# = value (no result)
if i; constant c;
Select i with i.stmt# = c.value
none
5000
716 - WITH-call: stmt# = value (no result)
call cl; constant c;
Select cl with cl.stmt# = c.value
none
5000
717 - WITH-stmt: value = stmt#
stmt s; constant c;
Select c with c.value = s.stmt#
1, 3, 5, 11
5000
718 - WITH-assign: value = stmt#
assign a; constant c;
Select c with c.value = a.stmt#
1, 3, 11
5000
719 - WITH-while: value = stmt#
while w; constant c;
Select c with c.value = w.stmt#
5
5000
720 - WITH-if: value = stmt# (no result)
if i; constant c;
Select c with c.value = i.stmt#
none
5000
721 - WITH-call: stmt# = value (no result)
call cl; constant c;
Select c with c.value = cl.stmt#
none
5000
722 - WITH: constant = constant

Select BOOLEAN with 1 = 1
true
5000
723 - WITH: constant = constant (no result)

Select BOOLEAN with 5 = 10
false
5000
724 - WITH: string = string

Select BOOLEAN with "hello" = "hello"
true
5000
725 - WITH: string = string (no result)

Select BOOLEAN with "harlo" = "hello"
false
5000
726 - WITH: prog_line = prog_line
prog_line n1; prog_line n2;
Select BOOLEAN with n1 = n2
true
5000
727 - WITH: stmt# = stmt#
stmt s;
Select BOOLEAN with s.stmt# = s.stmt#
true
5000
728 - WITH: stmt# = stmt# (no result)
assign a; while w;
Select BOOLEAN with a.stmt# = w.stmt#
false
5000
729 - WITH: c.value = c.value
constant c;
Select BOOLEAN with c.value = c.value
true
5000
730 - WITH: c.procName = c.procName
call c;
Select c.procName with c.procName = c.procName
none
5000
731 - WITH: p.procName = p.procName
procedure p;
Select BOOLEAN with p.procName = p.procName
true
5000